{"version":3,"file":"static/js/2684.ee17a94c.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/ModalWrapper/ConfirmDialog.tsx","screens/Console/Tenants/TenantDetails/TenantSecurity.tsx","screens/shared/ErrorBlock.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  fileInputStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...fileInputStyles,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n    textBoxContainer: {\n      ...fieldBasic.textBoxContainer,\n      maxWidth: \"100%\",\n      border: \"1px solid #eaeaea\",\n      paddingLeft: \"15px\",\n    },\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\n          classes.fieldContainer\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"small\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"small\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid item xs={12} sm={4} md={3}>\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","import React from \"react\";\nimport {\n  Button,\n  ButtonProps,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { deleteDialogStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n  });\n\ntype ConfirmDialogProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n  onCancel?: () => void;\n  onConfirm: () => void;\n  classes?: any;\n  title: string;\n  isLoading?: boolean;\n  confirmationContent: React.ReactNode | React.ReactNode[];\n  cancelText?: string;\n  confirmText?: string;\n  confirmButtonProps?: Partial<ButtonProps>;\n  cancelButtonProps?: Partial<ButtonProps>;\n  titleIcon?: React.ReactNode;\n};\n\nconst ConfirmDialog = ({\n  isOpen = false,\n  onClose,\n  onCancel,\n  onConfirm,\n  classes = {},\n  title = \"\",\n  isLoading,\n  confirmationContent,\n  cancelText = \"Cancel\",\n  confirmText = \"Confirm\",\n  confirmButtonProps = {},\n  cancelButtonProps = {},\n  titleIcon = null,\n}: ConfirmDialogProps) => {\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n      sx={{\n        \"& .MuiPaper-root\": {\n          padding: \"1rem 2rem 2rem 1rem\",\n        },\n      }}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent className={classes.content}>\n        {confirmationContent}\n      </DialogContent>\n      <DialogActions className={classes.actions}>\n        <Button\n          className={classes.cancelButton}\n          onClick={onCancel || onClose}\n          disabled={isLoading}\n          type=\"button\"\n          {...cancelButtonProps}\n          variant=\"outlined\"\n          color=\"primary\"\n        >\n          {cancelText}\n        </Button>\n\n        <LoadingButton\n          className={classes.confirmButton}\n          type=\"button\"\n          onClick={onConfirm}\n          loading={isLoading}\n          disabled={isLoading}\n          variant=\"outlined\"\n          color=\"secondary\"\n          loadingPosition=\"start\"\n          startIcon={<React.Fragment />}\n          autoFocus\n          {...confirmButtonProps}\n        >\n          {confirmText}\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ConfirmDialog);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ITenant } from \"../ListTenants/types\";\nimport { ICertificateInfo, ITenantSecurityResponse } from \"../types\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  containerForHeader,\n  spacingUtils,\n  tenantDetailsStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport Chip from \"@mui/material/Chip\";\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Moment from \"react-moment\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport {\n  Button,\n  CircularProgress,\n  DialogContentText,\n  Typography,\n} from \"@mui/material\";\nimport { KeyPair } from \"../ListTenants/utils\";\nimport FileSelector from \"../../Common/FormComponents/FileSelector/FileSelector\";\nimport api from \"../../../../common/api\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../../../../store\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { setTenantDetailsLoad } from \"../actions\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { AddIcon, ConfirmModalIcon } from \"../../../../icons\";\n\ninterface ITenantSecurity {\n  classes: any;\n  loadingTenant: boolean;\n  tenant: ITenant | null;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  setTenantDetailsLoad: typeof setTenantDetailsLoad;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    ...spacingUtils,\n    loaderAlign: {\n      textAlign: \"center\",\n    },\n    title: {\n      marginTop: 35,\n    },\n    bold: { fontWeight: \"bold\" },\n    italic: { fontStyle: \"italic\" },\n    paperContainer: {\n      padding: \"15px 15px 15px 50px\",\n    },\n    certificateInfo: {\n      height: \"auto\",\n      margin: 5,\n    },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    certInputRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n      borderBottom: \"1px solid #eaeaea\",\n      marginBottom: 10,\n    },\n    caCertsRow: {\n      borderBottom: \"1px solid #eaeaea\",\n      display: \"flex\",\n      alignItems: \"center\",\n      marginBottom: 10,\n    },\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst TenantSecurity = ({\n  classes,\n  tenant,\n  loadingTenant,\n  setErrorSnackMessage,\n  setTenantDetailsLoad,\n}: ITenantSecurity) => {\n  const [isSending, setIsSending] = useState<boolean>(false);\n  const [dialogOpen, setDialogOpen] = useState<boolean>(false);\n  const [enableAutoCert, setEnableAutoCert] = useState<boolean>(false);\n  const [enableCustomCerts, setEnableCustomCerts] = useState<boolean>(false);\n  const [certificatesToBeRemoved, setCertificatesToBeRemoved] = useState<\n    string[]\n  >([]);\n  // MinIO certificates\n  const [minioCertificates, setMinioCertificates] = useState<KeyPair[]>([]);\n  const [minioCaCertificates, setMinioCaCertificates] = useState<KeyPair[]>([]);\n  const [minioTLSCertificateSecrets, setMinioTLSCertificateSecrets] = useState<\n    ICertificateInfo[]\n  >([]);\n  const [minioTLSCaCertificateSecrets, setMinioTLSCaCertificateSecrets] =\n    useState<ICertificateInfo[]>([]);\n\n  const getTenantSecurityInfo = useCallback(() => {\n    api\n      .invoke(\n        \"GET\",\n        `/api/v1/namespaces/${tenant?.namespace}/tenants/${tenant?.name}/security`\n      )\n      .then((res: ITenantSecurityResponse) => {\n        setEnableAutoCert(res.autoCert);\n        if (res.customCertificates.minio || res.customCertificates.minioCAs) {\n          setEnableCustomCerts(true);\n        }\n        setMinioTLSCertificateSecrets(res.customCertificates.minio || []);\n        setMinioTLSCaCertificateSecrets(res.customCertificates.minioCAs || []);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setErrorSnackMessage(err);\n      });\n  }, [tenant, setErrorSnackMessage]);\n\n  useEffect(() => {\n    if (tenant) {\n      getTenantSecurityInfo();\n    }\n  }, [tenant, getTenantSecurityInfo]);\n\n  const updateTenantSecurity = () => {\n    setIsSending(true);\n    let payload = {\n      autoCert: enableAutoCert,\n      customCertificates: {},\n    };\n    if (enableCustomCerts) {\n      payload[\"customCertificates\"] = {\n        secretsToBeDeleted: certificatesToBeRemoved,\n        minio: minioCertificates\n          .map((keyPair: KeyPair) => ({\n            crt: keyPair.encoded_cert,\n            key: keyPair.encoded_key,\n          }))\n          .filter((cert: any) => cert.crt && cert.key),\n        minioCAs: minioCaCertificates\n          .map((keyPair: KeyPair) => keyPair.encoded_cert)\n          .filter((cert: any) => cert),\n      };\n    } else {\n      payload[\"customCertificates\"] = {\n        secretsToBeDeleted: [\n          ...minioTLSCertificateSecrets.map((cert) => cert.name),\n          ...minioTLSCaCertificateSecrets.map((cert) => cert.name),\n        ],\n        minio: [],\n        minioCAs: [],\n      };\n    }\n    api\n      .invoke(\n        \"POST\",\n        `/api/v1/namespaces/${tenant?.namespace}/tenants/${tenant?.name}/security`,\n        payload\n      )\n      .then(() => {\n        setIsSending(false);\n        // Close confirmation modal\n        setDialogOpen(false);\n        // Refresh Information and reset forms\n        setMinioCertificates([\n          {\n            cert: \"\",\n            encoded_cert: \"\",\n            encoded_key: \"\",\n            id: Date.now().toString(),\n            key: \"\",\n          },\n        ]);\n        setMinioCaCertificates([\n          {\n            cert: \"\",\n            encoded_cert: \"\",\n            encoded_key: \"\",\n            id: Date.now().toString(),\n            key: \"\",\n          },\n        ]);\n        getTenantSecurityInfo();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setErrorSnackMessage(err);\n        setIsSending(false);\n      });\n  };\n\n  const removeCertificate = (certificateInfo: ICertificateInfo) => {\n    // TLS certificate secrets can be referenced MinIO, Console or KES, we need to remove the secret from all list and update\n    // the arrays\n    // Add certificate to the global list of secrets to be removed\n    setCertificatesToBeRemoved([\n      ...certificatesToBeRemoved,\n      certificateInfo.name,\n    ]);\n\n    // Update MinIO TLS certificate secrets\n    const updatedMinIOTLSCertificateSecrets = minioTLSCertificateSecrets.filter(\n      (certificateSecret) => certificateSecret.name !== certificateInfo.name\n    );\n    const updatedMinIOTLSCaCertificateSecrets =\n      minioTLSCaCertificateSecrets.filter(\n        (certificateSecret) => certificateSecret.name !== certificateInfo.name\n      );\n    setMinioTLSCertificateSecrets(updatedMinIOTLSCertificateSecrets);\n    setMinioTLSCaCertificateSecrets(updatedMinIOTLSCaCertificateSecrets);\n  };\n\n  const addFileToKeyPair = (\n    type: string,\n    id: string,\n    key: string,\n    fileName: string,\n    value: string\n  ) => {\n    let certificates = minioCertificates;\n    let updateCertificates: any = () => {};\n\n    switch (type) {\n      case \"minio\": {\n        certificates = minioCertificates;\n        updateCertificates = setMinioCertificates;\n        break;\n      }\n      case \"minioCAs\": {\n        certificates = minioCaCertificates;\n        updateCertificates = setMinioCaCertificates;\n        break;\n      }\n      default:\n    }\n\n    const NCertList = certificates.map((item: KeyPair) => {\n      if (item.id === id) {\n        return {\n          ...item,\n          [key]: fileName,\n          [`encoded_${key}`]: value,\n        };\n      }\n      return item;\n    });\n    updateCertificates(NCertList);\n  };\n\n  const deleteKeyPair = (type: string, id: string) => {\n    let certificates = minioCertificates;\n    let updateCertificates: any = () => {};\n\n    switch (type) {\n      case \"minio\": {\n        certificates = minioCertificates;\n        updateCertificates = setMinioCertificates;\n        break;\n      }\n      case \"minioCAs\": {\n        certificates = minioCaCertificates;\n        updateCertificates = setMinioCaCertificates;\n        break;\n      }\n      default:\n    }\n\n    if (certificates.length > 1) {\n      const cleanCertsList = certificates.filter(\n        (item: KeyPair) => item.id !== id\n      );\n      updateCertificates(cleanCertsList);\n    }\n  };\n\n  const addKeyPair = (type: string) => {\n    let certificates = minioCertificates;\n    let updateCertificates: any = () => {};\n\n    switch (type) {\n      case \"minio\": {\n        certificates = minioCertificates;\n        updateCertificates = setMinioCertificates;\n        break;\n      }\n      case \"minioCAs\": {\n        certificates = minioCaCertificates;\n        updateCertificates = setMinioCaCertificates;\n        break;\n      }\n      default:\n    }\n    const updatedCertificates = [\n      ...certificates,\n      {\n        id: Date.now().toString(),\n        key: \"\",\n        cert: \"\",\n        encoded_key: \"\",\n        encoded_cert: \"\",\n      },\n    ];\n    updateCertificates(updatedCertificates);\n  };\n  return (\n    <React.Fragment>\n      <ConfirmDialog\n        title={\"Save and Restart\"}\n        confirmText={\"Restart\"}\n        cancelText=\"Cancel\"\n        titleIcon={<ConfirmModalIcon />}\n        isLoading={isSending}\n        onClose={() => setDialogOpen(false)}\n        isOpen={dialogOpen}\n        onConfirm={updateTenantSecurity}\n        confirmationContent={\n          <DialogContentText>\n            Are you sure you want to save the changes and restart the service?\n          </DialogContentText>\n        }\n      />\n      {loadingTenant ? (\n        <Paper className={classes.paperContainer}>\n          <div className={classes.loaderAlign}>\n            <CircularProgress />\n          </div>\n        </Paper>\n      ) : (\n        <Fragment>\n          <h1 className={classes.sectionTitle}>Security</h1>\n          <Paper className={classes.paperContainer}>\n            <Grid item xs={12} className={classes.title}>\n              <FormSwitchWrapper\n                value=\"enableAutoCert\"\n                id=\"enableAutoCert\"\n                name=\"enableAutoCert\"\n                checked={enableAutoCert}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  setEnableAutoCert(checked);\n                }}\n                label={\"TLS\"}\n                description={\n                  \"The internode certificates will be generated and managed by MinIO Operator\"\n                }\n              />\n              <FormSwitchWrapper\n                value=\"enableCustomCerts\"\n                id=\"enableCustomCerts\"\n                name=\"enableCustomCerts\"\n                checked={enableCustomCerts}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  setEnableCustomCerts(checked);\n                }}\n                label={\"Custom Certificates\"}\n              />\n            </Grid>\n\n            {enableCustomCerts && (\n              <Grid container>\n                <Grid container item xs={12}>\n                  <h4>MinIO Certificates</h4>\n                </Grid>\n                <Grid container item xs={12}>\n                  {minioTLSCertificateSecrets.map(\n                    (certificateInfo: ICertificateInfo) => (\n                      <Chip\n                        key={certificateInfo.name}\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        className={classes.certificateInfo}\n                        label={\n                          <div>\n                            <Typography\n                              variant=\"subtitle1\"\n                              display=\"block\"\n                              gutterBottom\n                            >\n                              {certificateInfo.name}\n                            </Typography>\n                            <Typography\n                              className={classes.italic}\n                              variant=\"caption\"\n                              display=\"block\"\n                              gutterBottom\n                            >\n                              {certificateInfo.domains &&\n                                certificateInfo.domains.map((dom) => {\n                                  return <div>{dom}</div>;\n                                })}\n                            </Typography>\n                            <Typography\n                              className={classes.bold}\n                              variant=\"overline\"\n                              gutterBottom\n                            >\n                              Expiry:&nbsp;\n                            </Typography>\n                            <Typography variant=\"caption\" gutterBottom>\n                              <Moment format=\"YYYY-MM-DD\">\n                                {certificateInfo.expiry}\n                              </Moment>\n                            </Typography>\n                          </div>\n                        }\n                        onDelete={() => removeCertificate(certificateInfo)}\n                      />\n                    )\n                  )}\n                </Grid>\n\n                <Grid container item xs={12}>\n                  {minioCertificates.map((keyPair) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={keyPair.id}\n                      className={classes.certInputRow}\n                    >\n                      <Grid item xs={9} className={classes.fileItem}>\n                        <Grid item xs={6}>\n                          <FileSelector\n                            onChange={(encodedValue, fileName) =>\n                              addFileToKeyPair(\n                                \"minio\",\n                                keyPair.id,\n                                \"cert\",\n                                fileName,\n                                encodedValue\n                              )\n                            }\n                            accept=\".cer,.crt,.cert,.pem\"\n                            id=\"tlsCert\"\n                            name=\"tlsCert\"\n                            label=\"Cert\"\n                            value={keyPair.cert}\n                          />\n                        </Grid>\n                        <Grid item xs={6} className={classes.spacerLeft}>\n                          <FileSelector\n                            onChange={(encodedValue, fileName) =>\n                              addFileToKeyPair(\n                                \"minio\",\n                                keyPair.id,\n                                \"key\",\n                                fileName,\n                                encodedValue\n                              )\n                            }\n                            accept=\".key,.pem\"\n                            id=\"tlsKey\"\n                            name=\"tlsKey\"\n                            label=\"Key\"\n                            value={keyPair.key}\n                          />\n                        </Grid>\n                      </Grid>\n                      <Grid item md={2} xs={1}>\n                        <Button\n                          variant=\"outlined\"\n                          color=\"secondary\"\n                          onClick={() => deleteKeyPair(\"minio\", keyPair.id)}\n                        >\n                          Remove\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n                <Grid container item xs={12}>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    endIcon={<AddIcon />}\n                    onClick={() => addKeyPair(\"minio\")}\n                  >\n                    Add Certificate\n                  </Button>\n                </Grid>\n\n                <Grid container item xs={12}>\n                  <h4>MinIO CA Certificates</h4>\n                </Grid>\n                <Grid container item xs={12}>\n                  {minioTLSCaCertificateSecrets.map(\n                    (certificateInfo: ICertificateInfo) => (\n                      <Chip\n                        key={certificateInfo.name}\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        className={classes.certificateInfo}\n                        label={\n                          <div>\n                            <Typography\n                              variant=\"subtitle1\"\n                              display=\"block\"\n                              gutterBottom\n                            >\n                              {certificateInfo.name}\n                            </Typography>\n                            <Typography\n                              className={classes.italic}\n                              variant=\"caption\"\n                              display=\"block\"\n                              gutterBottom\n                            >\n                              {certificateInfo.domains &&\n                                certificateInfo.domains.map((dom) => {\n                                  return <div>{dom}</div>;\n                                })}\n                            </Typography>\n                            <Typography\n                              className={classes.bold}\n                              variant=\"overline\"\n                              gutterBottom\n                            >\n                              Expiry:&nbsp;\n                            </Typography>\n                            <Typography variant=\"caption\" gutterBottom>\n                              <Moment format=\"YYYY-MM-DD\">\n                                {certificateInfo.expiry}\n                              </Moment>\n                            </Typography>\n                          </div>\n                        }\n                        onDelete={() => removeCertificate(certificateInfo)}\n                      />\n                    )\n                  )}\n                </Grid>\n\n                <Grid container item xs={12}>\n                  {minioCaCertificates.map((keyPair: KeyPair) => (\n                    <Grid\n                      item\n                      xs={12}\n                      className={classes.caCertsRow}\n                      key={keyPair.id}\n                    >\n                      <Grid item xs={9} className={classes.fileItem}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) =>\n                            addFileToKeyPair(\n                              \"minioCAs\",\n                              keyPair.id,\n                              \"cert\",\n                              fileName,\n                              encodedValue\n                            )\n                          }\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                      </Grid>\n                      <Grid item xs={1}>\n                        <Button\n                          variant=\"outlined\"\n                          color=\"secondary\"\n                          onClick={() => deleteKeyPair(\"minioCAs\", keyPair.id)}\n                        >\n                          Remove\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n                <Grid container item xs={12}>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    endIcon={<AddIcon />}\n                    onClick={() => addKeyPair(\"minioCAs\")}\n                  >\n                    Add CA Certificate\n                  </Button>\n                </Grid>\n              </Grid>\n            )}\n\n            <Grid item xs={12} className={classes.buttonContainer}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={dialogOpen || isSending}\n                onClick={() => setDialogOpen(true)}\n              >\n                Save\n              </Button>\n            </Grid>\n          </Paper>\n        </Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  loadingTenant: state.tenants.tenantDetails.loadingTenant,\n  selectedTenant: state.tenants.tenantDetails.currentTenant,\n  tenant: state.tenants.tenantDetails.tenantInfo,\n});\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n  setTenantDetailsLoad,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(TenantSecurity));\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n"],"names":["withStyles","theme","createStyles","fieldBasic","tooltipHelper","valueString","maxWidth","whiteSpace","overflow","textOverflow","marginTop","fileInputField","margin","flexFlow","fileInputStyles","inputLabel","fontWeight","textBoxContainer","border","paddingLeft","label","classes","onChange","id","name","disabled","tooltip","required","error","accept","value","useState","showFileSelector","setShowSelector","Grid","item","xs","className","fieldBottom","fieldContainer","errorInField","InputLabel","htmlFor","fieldLabelError","tooltipContainer","Tooltip","title","placement","HelpIcon","type","e","fileName","get","evt","callback","file","target","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","length","fileProcess","data","IconButton","color","component","onClick","disableRipple","disableFocusRipple","size","Cancel","ErrorBlock","errorMessage","fileReselect","AttachFile","StyledSwitch","root","width","height","padding","switchBase","transform","palette","common","white","backgroundColor","boxShadow","opacity","thumb","marginLeft","track","borderRadius","transition","transitions","create","checked","focusVisible","switchContainer","display","alignItems","justifyContent","Switch","divContainer","marginBottom","indicatorLabelOn","indicatorLabel","fontSize","fieldDescription","actionsTray","switchOnly","description","indicatorLabels","switchComponent","clsx","inputProps","disableTouchRipple","container","sm","md","textAlign","deleteDialogStyles","isOpen","onClose","onCancel","onConfirm","isLoading","confirmationContent","cancelText","confirmText","confirmButtonProps","cancelButtonProps","titleIcon","open","event","reason","sx","titleText","closeContainer","closeButton","content","actions","cancelButton","variant","confirmButton","loading","loadingPosition","startIcon","autoFocus","mapDispatchToProps","setErrorSnackMessage","setTenantDetailsLoad","connector","connect","state","loadingTenant","tenants","tenantDetails","selectedTenant","currentTenant","tenant","tenantInfo","tenantDetailsStyles","spacingUtils","loaderAlign","bold","italic","fontStyle","paperContainer","certificateInfo","fileItem","marginRight","minWidth","certInputRow","borderBottom","caCertsRow","containerForHeader","spacing","isSending","setIsSending","dialogOpen","setDialogOpen","enableAutoCert","setEnableAutoCert","enableCustomCerts","setEnableCustomCerts","certificatesToBeRemoved","setCertificatesToBeRemoved","minioCertificates","setMinioCertificates","minioCaCertificates","setMinioCaCertificates","minioTLSCertificateSecrets","setMinioTLSCertificateSecrets","minioTLSCaCertificateSecrets","setMinioTLSCaCertificateSecrets","getTenantSecurityInfo","useCallback","api","namespace","then","res","autoCert","customCertificates","minio","minioCAs","catch","err","useEffect","removeCertificate","updatedMinIOTLSCertificateSecrets","filter","certificateSecret","updatedMinIOTLSCaCertificateSecrets","addFileToKeyPair","key","certificates","updateCertificates","map","deleteKeyPair","addKeyPair","Date","now","cert","encoded_key","encoded_cert","payload","secretsToBeDeleted","keyPair","crt","Fragment","sectionTitle","gutterBottom","domains","dom","format","expiry","onDelete","encodedValue","spacerLeft","endIcon","buttonContainer","errorBlock","main","withBreak"],"sourceRoot":""}