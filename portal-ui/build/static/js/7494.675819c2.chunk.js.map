{"version":3,"file":"static/js/7494.675819c2.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/AccessRulePanel.tsx","screens/Console/Common/PanelTitle/PanelTitle.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Paper } from \"@mui/material\";\nimport { AppState } from \"../../../../store\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { ISessionResponse } from \"../../types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport TableWrapper from \"../../Common/TableWrapper/TableWrapper\";\nimport api from \"../../../../common/api\";\n\nimport AddIcon from \"../../../../icons/AddIcon\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  actionsTray,\n  containerForHeader,\n  objectBrowserCommon,\n  searchField,\n  tableStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { BucketInfo } from \"../types\";\nimport { IAM_SCOPES } from \"../../../../common/SecureComponent/permissions\";\nimport PanelTitle from \"../../Common/PanelTitle/PanelTitle\";\nimport {\n  SecureComponent,\n  hasPermission,\n} from \"../../../../common/SecureComponent\";\n\nimport withSuspense from \"../../Common/Components/withSuspense\";\nimport RBIconButton from \"./SummaryItems/RBIconButton\";\n\nconst AddAccessRuleModal = withSuspense(\n  React.lazy(() => import(\"./AddAccessRule\"))\n);\nconst DeleteAccessRuleModal = withSuspense(\n  React.lazy(() => import(\"./DeleteAccessRule\"))\n);\nconst EditAccessRuleModal = withSuspense(\n  React.lazy(() => import(\"./EditAccessRule\"))\n);\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    \"@global\": {\n      \".rowLine:hover  .iconFileElm\": {\n        backgroundImage: \"url(/images/ob_file_filled.svg)\",\n      },\n      \".rowLine:hover  .iconFolderElm\": {\n        backgroundImage: \"url(/images/ob_folder_filled.svg)\",\n      },\n    },\n    listButton: {\n      marginLeft: \"10px\",\n      align: \"right\",\n    },\n    ...tableStyles,\n    ...actionsTray,\n    ...searchField,\n    ...objectBrowserCommon,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst mapState = (state: AppState) => ({\n  session: state.console.session,\n  loadingBucket: state.buckets.bucketDetails.loadingBucket,\n  bucketInfo: state.buckets.bucketDetails.bucketInfo,\n});\n\nconst connector = connect(mapState, { setErrorSnackMessage });\n\ninterface IAccessRuleProps {\n  session: ISessionResponse;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  classes: any;\n  match: any;\n  loadingBucket: boolean;\n  bucketInfo: BucketInfo | null;\n}\n\nconst AccessRule = ({\n  classes,\n  match,\n  setErrorSnackMessage,\n  loadingBucket,\n  bucketInfo,\n}: IAccessRuleProps) => {\n  const [loadingAccessRules, setLoadingAccessRules] = useState<boolean>(true);\n  const [accessRules, setAccessRules] = useState([]);\n  const [addAccessRuleOpen, setAddAccessRuleOpen] = useState<boolean>(false);\n  const [deleteAccessRuleOpen, setDeleteAccessRuleOpen] =\n    useState<boolean>(false);\n  const [accessRuleToDelete, setAccessRuleToDelete] = useState<string>(\"\");\n  const [editAccessRuleOpen, setEditAccessRuleOpen] = useState<boolean>(false);\n  const [accessRuleToEdit, setAccessRuleToEdit] = useState<string>(\"\");\n  const [initialAccess, setInitialAccess] = useState<string>(\"\");\n\n  const bucketName = match.params[\"bucketName\"];\n\n  const displayAccessRules = hasPermission(bucketName, [\n    IAM_SCOPES.S3_GET_BUCKET_POLICY,\n  ]);\n\n  const deleteAccessRules = hasPermission(bucketName, [\n    IAM_SCOPES.S3_DELETE_BUCKET_POLICY,\n  ]);\n\n  const editAccessRules = hasPermission(bucketName, [\n    IAM_SCOPES.S3_PUT_BUCKET_POLICY,\n  ]);\n\n  useEffect(() => {\n    if (loadingBucket) {\n      setLoadingAccessRules(true);\n    }\n  }, [loadingBucket, setLoadingAccessRules]);\n\n  const AccessRuleActions = [\n    {\n      type: \"delete\",\n      disableButtonFunction: () => !deleteAccessRules,\n      onClick: (accessRule: any) => {\n        setDeleteAccessRuleOpen(true);\n        setAccessRuleToDelete(accessRule.prefix);\n      },\n    },\n    {\n      type: \"view\",\n      disableButtonFunction: () => !editAccessRules,\n      onClick: (accessRule: any) => {\n        setAccessRuleToEdit(accessRule.prefix);\n        setInitialAccess(accessRule.access);\n        setEditAccessRuleOpen(true);\n      },\n    },\n  ];\n\n  useEffect(() => {\n    if (loadingAccessRules) {\n      if (displayAccessRules) {\n        api\n          .invoke(\"GET\", `/api/v1/bucket/${bucketName}/access-rules`)\n          .then((res: any) => {\n            setAccessRules(res.accessRules);\n            setLoadingAccessRules(false);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setErrorSnackMessage(err);\n            setLoadingAccessRules(false);\n          });\n      } else {\n        setLoadingAccessRules(false);\n      }\n    }\n  }, [\n    loadingAccessRules,\n    setErrorSnackMessage,\n    displayAccessRules,\n    bucketName,\n  ]);\n\n  const closeAddAccessRuleModal = () => {\n    setAddAccessRuleOpen(false);\n    setLoadingAccessRules(true);\n  };\n\n  const closeDeleteAccessRuleModal = () => {\n    setDeleteAccessRuleOpen(false);\n    setLoadingAccessRules(true);\n  };\n\n  const closeEditAccessRuleModal = () => {\n    setEditAccessRuleOpen(false);\n    setLoadingAccessRules(true);\n  };\n\n  return (\n    <Fragment>\n      {addAccessRuleOpen && (\n        <AddAccessRuleModal\n          modalOpen={addAccessRuleOpen}\n          onClose={closeAddAccessRuleModal}\n          bucket={bucketName}\n        />\n      )}\n      {deleteAccessRuleOpen && (\n        <DeleteAccessRuleModal\n          modalOpen={deleteAccessRuleOpen}\n          onClose={closeDeleteAccessRuleModal}\n          bucket={bucketName}\n          toDelete={accessRuleToDelete}\n        />\n      )}\n      {editAccessRuleOpen && (\n        <EditAccessRuleModal\n          modalOpen={editAccessRuleOpen}\n          onClose={closeEditAccessRuleModal}\n          bucket={bucketName}\n          toEdit={accessRuleToEdit}\n          initial={initialAccess}\n        />\n      )}\n      <Grid item xs={12} className={classes.actionsTray}>\n        <PanelTitle>Access Rules</PanelTitle>\n        <SecureComponent\n          scopes={[\n            IAM_SCOPES.S3_GET_BUCKET_POLICY,\n            IAM_SCOPES.S3_PUT_BUCKET_POLICY,\n          ]}\n          resource={bucketName}\n          matchAll\n          errorProps={{ disabled: true }}\n        >\n          <RBIconButton\n            tooltip={\"Add Access Rule\"}\n            onClick={() => {\n              setAddAccessRuleOpen(true);\n            }}\n            text={\"Add Access Rule\"}\n            icon={<AddIcon />}\n            color=\"primary\"\n            variant={\"contained\"}\n          />\n        </SecureComponent>\n      </Grid>\n      <Paper className={classes.tableBlock}>\n        <SecureComponent\n          scopes={[IAM_SCOPES.S3_GET_BUCKET_POLICY]}\n          resource={bucketName}\n          errorProps={{ disabled: true }}\n        >\n          <TableWrapper\n            noBackground={true}\n            itemActions={AccessRuleActions}\n            columns={[\n              { label: \"Prefix\", elementKey: \"prefix\" },\n              { label: \"Access\", elementKey: \"access\" },\n            ]}\n            isLoading={loadingAccessRules}\n            records={accessRules}\n            entityName=\"Access Rules\"\n            idField=\"prefix\"\n          />\n        </SecureComponent>\n      </Paper>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(connector(AccessRule));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      fontSize: \".9rem\",\n    },\n  });\n\ninterface IPanelTitle extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst PanelTitle = ({ classes, children }: IPanelTitle) => {\n  return <h1 className={classes.root}>{children}</h1>;\n};\n\nexport default withStyles(styles)(PanelTitle);\n"],"names":["AddAccessRuleModal","withSuspense","React","DeleteAccessRuleModal","EditAccessRuleModal","connector","connect","state","session","console","loadingBucket","buckets","bucketDetails","bucketInfo","setErrorSnackMessage","withStyles","theme","createStyles","backgroundImage","listButton","marginLeft","align","tableStyles","actionsTray","searchField","objectBrowserCommon","containerForHeader","spacing","classes","match","useState","loadingAccessRules","setLoadingAccessRules","accessRules","setAccessRules","addAccessRuleOpen","setAddAccessRuleOpen","deleteAccessRuleOpen","setDeleteAccessRuleOpen","accessRuleToDelete","setAccessRuleToDelete","editAccessRuleOpen","setEditAccessRuleOpen","accessRuleToEdit","setAccessRuleToEdit","initialAccess","setInitialAccess","bucketName","params","displayAccessRules","hasPermission","IAM_SCOPES","deleteAccessRules","editAccessRules","useEffect","AccessRuleActions","type","disableButtonFunction","onClick","accessRule","prefix","access","api","then","res","catch","err","Fragment","modalOpen","onClose","bucket","toDelete","toEdit","initial","item","xs","className","scopes","resource","matchAll","errorProps","disabled","tooltip","text","icon","color","variant","tableBlock","noBackground","itemActions","columns","label","elementKey","isLoading","records","entityName","idField","root","padding","margin","fontSize","children"],"sourceRoot":""}