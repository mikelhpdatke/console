{"version":3,"file":"static/js/426.5cf69cbf.chunk.js","mappings":"mQA0GMA,GAAYC,EAAAA,EAAAA,KAHD,SAACC,GAAD,MAAsB,CACrCC,cAAeD,EAAME,QAAQC,cAAcF,iBAET,CAClCG,qBAAAA,EAAAA,KAGF,WAAeC,EAAAA,EAAAA,IAnEA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,gCACXC,aAAc,CACZC,OAAQ,UAEPC,EAAAA,IACAC,EAAAA,IACAC,EAAAA,KACAC,EAAAA,EAAAA,IAAmBP,EAAMQ,QAAQ,QA2DxC,CAAkChB,GAxDb,SAAC,GAKK,IAJzBiB,EAIwB,EAJxBA,QACAC,EAGwB,EAHxBA,MACAf,EAEwB,EAFxBA,cACAG,EACwB,EADxBA,qBAEA,GAA4Ba,EAAAA,EAAAA,UAAmB,IAA/C,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAkB,GAAhD,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAAaN,EAAMO,OAAN,WACbC,EAAkBR,EAAMO,OAAN,gBA+BxB,OA7BAE,EAAAA,EAAAA,YAAU,WACJxB,GACFoB,GAAW,KAEZ,CAACpB,KAEJwB,EAAAA,EAAAA,YAAU,WACJL,GACFM,EAAAA,EAAAA,OAEI,MAFJ,6BAG0BF,EAH1B,oBAGqDF,EAHrD,YAKGK,MAAK,SAACC,GACL,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAIE,OAAQD,IAAK,CACnC,IAAIE,EAAeC,KAAKC,MAAQ,IAAQ,EAExCL,EAAIC,GAAGK,MAAOC,EAAAA,EAAAA,KAAUJ,EAAcH,EAAIC,GAAGO,WAAWC,YAE1DlB,EAAUS,GACVP,GAAW,MAEZiB,OAAM,SAACC,GACNnC,EAAqBmC,GACrBlB,GAAW,QAGhB,CAACD,EAASI,EAAiBF,EAAYlB,KAGxC,UAAC,WAAD,YACE,eAAIoC,UAAWzB,EAAQ0B,aAAvB,qBACA,SAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CAAYzB,OAAQA,EAAQE,QAASA","sources":["screens/Console/Tenants/TenantDetails/TenantEvents.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  tableStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport Grid from \"@mui/material/Grid\";\nimport { IEvent } from \"../ListTenants/types\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { niceDays } from \"../../../../common/utils\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport { AppState } from \"../../../../store\";\nimport EventsList from \"./events/EventsList\";\n\ninterface ITenantEventsProps {\n  classes: any;\n  match: any;\n  loadingTenant: boolean;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tableWrapper: {\n      height: \"450px\",\n    },\n    ...actionsTray,\n    ...searchField,\n    ...tableStyles,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst TenantEvents = ({\n  classes,\n  match,\n  loadingTenant,\n  setErrorSnackMessage,\n}: ITenantEventsProps) => {\n  const [events, setEvents] = useState<IEvent[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const tenantName = match.params[\"tenantName\"];\n  const tenantNamespace = match.params[\"tenantNamespace\"];\n\n  useEffect(() => {\n    if (loadingTenant) {\n      setLoading(true);\n    }\n  }, [loadingTenant]);\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/events`\n        )\n        .then((res: IEvent[]) => {\n          for (let i = 0; i < res.length; i++) {\n            let currentTime = (Date.now() / 1000) | 0;\n\n            res[i].seen = niceDays((currentTime - res[i].last_seen).toString());\n          }\n          setEvents(res);\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setErrorSnackMessage(err);\n          setLoading(false);\n        });\n    }\n  }, [loading, tenantNamespace, tenantName, setErrorSnackMessage]);\n\n  return (\n    <React.Fragment>\n      <h1 className={classes.sectionTitle}>Events</h1>\n      <Grid item xs={12}>\n        <EventsList events={events} loading={loading} />\n      </Grid>\n    </React.Fragment>\n  );\n};\nconst mapState = (state: AppState) => ({\n  loadingTenant: state.tenants.tenantDetails.loadingTenant,\n});\nconst connector = connect(mapState, {\n  setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(TenantEvents));\n"],"names":["connector","connect","state","loadingTenant","tenants","tenantDetails","setErrorSnackMessage","withStyles","theme","createStyles","tableWrapper","height","actionsTray","searchField","tableStyles","containerForHeader","spacing","classes","match","useState","events","setEvents","loading","setLoading","tenantName","params","tenantNamespace","useEffect","api","then","res","i","length","currentTime","Date","now","seen","niceDays","last_seen","toString","catch","err","className","sectionTitle","item","xs"],"sourceRoot":""}