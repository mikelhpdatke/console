{"version":3,"file":"static/js/7045.5f8c4810.chunk.js","mappings":"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","sources":["common/BackLink.tsx","screens/Console/Common/Layout/PageLayout.tsx","screens/Console/Common/PageHeader/PageHeader.tsx","screens/Console/NotificationEndpoints/NotificationTypeSelector.tsx","screens/Console/NotificationEndpoints/utils.ts"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { BackSettingsIcon } from \"../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    link: {\n      display: \"flex\",\n      alignItems: \"center\",\n      textDecoration: \"none\",\n      maxWidth: \"300px\",\n      padding: \"2rem 2rem 0rem 2rem\",\n      color: theme.palette.primary.light,\n      fontSize: \".8rem\",\n      \"&:hover\": {\n        textDecoration: \"underline\",\n      },\n    },\n    icon: {\n      marginRight: \".3rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      \"& svg.min-icon\": {\n        width: 12,\n      },\n    },\n  });\n\ninterface IBackLink {\n  classes: any;\n  to: string;\n  label: string;\n  className?: any;\n  executeOnClick?: () => void;\n}\n\nconst BackLink = ({\n  to,\n  label,\n  classes,\n  className,\n  executeOnClick,\n}: IBackLink) => {\n  return (\n    <Link\n      to={to}\n      className={`${classes.link} ${className ? className : \"\"}`}\n      onClick={() => {\n        if (executeOnClick) {\n          executeOnClick();\n        }\n      }}\n    >\n      <div className={classes.icon}>\n        <BackSettingsIcon />\n      </div>\n      <div className={classes.label}>{label}</div>\n    </Link>\n  );\n};\n\nexport default withStyles(styles)(BackLink);\n","import React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { pageContentStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...pageContentStyles,\n  });\n\ntype PageLayoutProps = {\n  className?: string;\n  classes?: any;\n  children: any;\n};\n\nconst PageLayout = ({ classes, className = \"\", children }: PageLayoutProps) => {\n  return (\n    <div className={classes.contentSpacer}>\n      <Grid container>\n        <Grid item xs={12} className={className}>\n          {children}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(PageLayout);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { AppState } from \"../../../../store\";\nimport OperatorLogo from \"../../../../icons/OperatorLogo\";\nimport ConsoleLogo from \"../../../../icons/ConsoleLogo\";\nimport { IFileItem } from \"../../ObjectBrowser/reducers\";\nimport { toggleList } from \"../../ObjectBrowser/actions\";\nimport { ObjectManagerIcon } from \"../../../../icons\";\n\ninterface IPageHeader {\n  classes: any;\n  sidebarOpen?: boolean;\n  operatorMode?: boolean;\n  label: any;\n  actions?: any;\n  managerObjects?: IFileItem[];\n  toggleList: typeof toggleList;\n  middleComponent?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      width: \"100%\",\n      minHeight: 79,\n      display: \"flex\",\n      backgroundColor: \"#fff\",\n      left: 0,\n      boxShadow: \"rgba(0,0,0,.08) 0 3px 10px\",\n    },\n    label: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n    },\n    labelStyle: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 700,\n      marginLeft: 34,\n      marginTop: 8,\n    },\n    rightMenu: {\n      textAlign: \"right\",\n    },\n    logo: {\n      marginLeft: 34,\n      fill: theme.palette.primary.main,\n      \"& .min-icon\": {\n        width: 120,\n      },\n    },\n    middleComponent: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  });\n\nconst PageHeader = ({\n  classes,\n  label,\n  actions,\n  sidebarOpen,\n  operatorMode,\n  managerObjects,\n  toggleList,\n  middleComponent,\n}: IPageHeader) => {\n  return (\n    <Grid\n      container\n      className={`${classes.headerContainer} page-header`}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Grid\n        item\n        xs={12}\n        sm={12}\n        md={middleComponent ? 3 : 6}\n        className={classes.label}\n        sx={{\n          paddingTop: [\"15px\", \"15px\", \"0\", \"0\"],\n        }}\n      >\n        {!sidebarOpen && (\n          <div className={classes.logo}>\n            {operatorMode ? <OperatorLogo /> : <ConsoleLogo />}\n          </div>\n        )}\n        <Typography variant=\"h4\" className={classes.labelStyle}>\n          {label}\n        </Typography>\n      </Grid>\n      {middleComponent && (\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={6}\n          className={classes.middleComponent}\n          sx={{ marginTop: [\"10px\", \"10px\", \"0\", \"0\"] }}\n        >\n          {middleComponent}\n        </Grid>\n      )}\n      <Grid\n        item\n        xs={12}\n        sm={12}\n        md={middleComponent ? 3 : 6}\n        className={classes.rightMenu}\n      >\n        {actions && actions}\n        {managerObjects && managerObjects.length > 0 && (\n          <IconButton\n            color=\"primary\"\n            aria-label=\"Refresh List\"\n            component=\"span\"\n            onClick={() => {\n              toggleList();\n            }}\n            size=\"large\"\n          >\n            <ObjectManagerIcon />\n          </IconButton>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  sidebarOpen: state.system.sidebarOpen,\n  operatorMode: state.system.operatorMode,\n  managerObjects: state.objectBrowser.objectManager.objectsToManage,\n});\n\nconst mapDispatchToProps = {\n  toggleList,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(PageHeader));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { servicesList } from \"./utils\";\nimport {\n  settingsCommon,\n  typesSelection,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport history from \"../../../history\";\nimport BackLink from \"../../../common/BackLink\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\n\ninterface INotificationTypeSelector {\n  classes: any;\n}\n\nconst withLogos = servicesList.filter((elService) => elService.logo !== \"\");\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...settingsCommon,\n    ...typesSelection,\n  });\n\nconst NotificationTypeSelector = ({ classes }: INotificationTypeSelector) => {\n  return (\n    <Fragment>\n      <PageHeader label=\"Notification Endpoints\" />\n      <BackLink\n        to={IAM_PAGES.NOTIFICATIONS_ENDPOINTS}\n        label=\"Return to Configured Endpoints\"\n        className={classes.link}\n      />\n      <PageLayout>\n        <div className={classes.iconContainer}>\n          {withLogos.map((item) => {\n            return (\n              <button\n                key={`icon-${item.targetTitle}`}\n                className={classes.lambdaNotif}\n                onClick={() => {\n                  history.push(\n                    `${IAM_PAGES.NOTIFICATIONS_ENDPOINTS_ADD}/${item.actionTrigger}`\n                  );\n                }}\n              >\n                <div className={classes.lambdaNotifIcon}>\n                  <img\n                    src={item.logo}\n                    className={classes.logoButton}\n                    alt={item.targetTitle}\n                  />\n                </div>\n\n                <div className={classes.lambdaNotifTitle}>\n                  <b>{item.targetTitle}</b>\n                </div>\n              </button>\n            );\n          })}\n        </div>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(NotificationTypeSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { NotificationEndpointItem } from \"./types\";\n\nimport { IElementValue } from \"../Configurations/types\";\n\nexport const notifyPostgres = \"notify_postgres\";\nexport const notifyMysql = \"notify_mysql\";\nexport const notifyKafka = \"notify_kafka\";\nexport const notifyAmqp = \"notify_amqp\";\nexport const notifyMqtt = \"notify_mqtt\";\nexport const notifyRedis = \"notify_redis\";\nexport const notifyNats = \"notify_nats\";\nexport const notifyElasticsearch = \"notify_elasticsearch\";\nexport const notifyWebhooks = \"notify_webhook\";\nexport const notifyNsq = \"notify_nsq\";\n\nexport const notificationTransform = (\n  notificationElements: NotificationEndpointItem[]\n) => {\n  return notificationElements.map((element) => {\n    return {\n      service_name: `${element.service}:${element.account_id}`,\n      status: element.status,\n    };\n  });\n};\n\nexport const servicesList = [\n  {\n    actionTrigger: notifyPostgres,\n    targetTitle: \"Postgres SQL\",\n    logo: \"/postgres-logo.svg\",\n  },\n  {\n    actionTrigger: notifyKafka,\n    targetTitle: \"Kafka\",\n    logo: \"/kafka-logo.svg\",\n  },\n  {\n    actionTrigger: notifyAmqp,\n    targetTitle: \"AMQP\",\n    logo: \"/amqp-logo.svg\",\n  },\n  {\n    actionTrigger: notifyMqtt,\n    targetTitle: \"MQTT\",\n    logo: \"/mqtt-logo.svg\",\n  },\n  {\n    actionTrigger: notifyRedis,\n    targetTitle: \"Redis\",\n    logo: \"/redis-logo.svg\",\n  },\n  {\n    actionTrigger: notifyNats,\n    targetTitle: \"NATS\",\n    logo: \"/nats-logo.svg\",\n  },\n  {\n    actionTrigger: notifyMysql,\n    targetTitle: \"Mysql\",\n    logo: \"/mysql-logo.svg\",\n  },\n  {\n    actionTrigger: notifyElasticsearch,\n    targetTitle: \"Elastic Search\",\n    logo: \"/elasticsearch-logo.svg\",\n  },\n  {\n    actionTrigger: notifyWebhooks,\n    targetTitle: \"Webhook\",\n    logo: \"/webhooks-logo.svg\",\n  },\n  {\n    actionTrigger: notifyNsq,\n    targetTitle: \"NSQ\",\n    logo: \"/nsq-logo.svg\",\n  },\n];\n\nconst commonFields = [\n  {\n    name: \"queue-dir\",\n    label: \"Queue Directory\",\n    required: true,\n\n    tooltip: \"staging dir for undelivered messages e.g. '/home/events'\",\n    type: \"string\",\n    placeholder: \"Enter Queue Directory\",\n  },\n  {\n    name: \"queue-limit\",\n    label: \"Queue Limit\",\n    required: false,\n\n    tooltip: \"maximum limit for undelivered messages, defaults to '10000'\",\n    type: \"number\",\n    placeholder: \"Enter Queue Limit\",\n  },\n  {\n    name: \"comment\",\n    label: \"Comment\",\n    required: false,\n    type: \"comment\",\n    placeholder: \"Enter Comment\",\n  },\n];\n\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\n\n  return nonEmptyFields;\n};\n\nexport const notificationEndpointsFields: any = {\n  [notifyKafka]: [\n    {\n      name: \"brokers\",\n      label: \"Brokers\",\n      required: true,\n\n      tooltip: \"Comma separated list of Kafka broker addresses\",\n      type: \"string\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      label: \"Topic\",\n      tooltip: \"Kafka topic used for bucket notifications\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"sasl_username\",\n      label: \"SASL Username\",\n      tooltip: \"Username for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Username\",\n    },\n    {\n      name: \"sasl_password\",\n      label: \"SASL Password\",\n      tooltip: \"Password for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Password\",\n    },\n    {\n      name: \"sasl_mechanism\",\n      label: \"SASL Mechanism\",\n      tooltip: \"SASL authentication mechanism, default 'PLAIN'\",\n      type: \"string\",\n    },\n    {\n      name: \"tls_client_auth\",\n      label: \"TLS Client Auth\",\n      tooltip:\n        \"Client Auth determines the Kafka server's policy for TLS client auth\",\n      type: \"string\",\n      placeholder: \"Enter TLS Client Auth\",\n    },\n    {\n      name: \"sasl\",\n      label: \"SASL\",\n      tooltip: \"Set to 'on' to enable SASL authentication\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS skip verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"client_tls_cert\",\n      label: \"client TLS cert\",\n      tooltip: \"Path to client certificate for mTLS auth\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Cert\",\n    },\n    {\n      name: \"client_tls_key\",\n      label: \"client TLS key\",\n      tooltip: \"Path to client key for mTLS auth\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Key\",\n    },\n    {\n      name: \"version\",\n      label: \"Version\",\n      tooltip: \"Specify the version of the Kafka cluster e.g '2.2.0'\",\n      type: \"string\",\n      placeholder: \"Enter Kafka Version\",\n    },\n    ...commonFields,\n  ],\n  [notifyAmqp]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"AMQP server endpoint e.g. `amqp://myuser:mypassword@localhost:5672`\",\n      type: \"url\",\n    },\n    {\n      name: \"exchange\",\n      label: \"Exchange\",\n      tooltip: \"Name of the AMQP exchange\",\n      type: \"string\",\n      placeholder: \"Enter Exchange\",\n    },\n    {\n      name: \"exchange_type\",\n      label: \"Exchange Type\",\n      tooltip: \"AMQP exchange type\",\n      type: \"string\",\n      placeholder: \"Enter Exchange Type\",\n    },\n    {\n      name: \"routing_key\",\n      label: \"Routing Key\",\n      tooltip: \"Routing key for publishing\",\n      type: \"string\",\n      placeholder: \"Enter Routing Key\",\n    },\n    {\n      name: \"mandatory\",\n      label: \"Mandatory\",\n      tooltip:\n        \"Quietly ignore undelivered messages when set to 'off', default is 'on'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"durable\",\n      label: \"Durable\",\n      tooltip:\n        \"Persist queue across broker restarts when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"no_wait\",\n      label: \"No Wait\",\n      tooltip:\n        \"Non-blocking message delivery when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"internal\",\n      label: \"Internal\",\n      tooltip:\n        \"Set to 'on' for exchange to be not used directly by publishers, but only when bound to other exchanges\",\n      type: \"on|off\",\n    },\n    {\n      name: \"auto_deleted\",\n      label: \"Auto Deleted\",\n      tooltip:\n        \"Auto delete queue when set to 'on', when there are no consumers\",\n      type: \"on|off\",\n    },\n    {\n      name: \"delivery_mode\",\n      label: \"Delivery Mode\",\n      tooltip: \"Set to '1' for non-persistent or '2' for persistent queue\",\n      type: \"number\",\n      placeholder: \"Enter Delivery Mode\",\n    },\n    ...commonFields,\n  ],\n  [notifyRedis]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"Redis server's address. For example: `localhost:6379`\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"key\",\n      required: true,\n      label: \"Key\",\n      tooltip: \"Redis key to store/update events, key is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Key\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"Redis server password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    ...commonFields,\n  ],\n  [notifyMqtt]: [\n    {\n      name: \"broker\",\n      required: true,\n      label: \"Broker\",\n      tooltip: \"MQTT server endpoint e.g. `tcp://localhost:1883`\",\n      type: \"uri\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"name of the MQTT topic to publish\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"MQTT username\",\n      type: \"string\",\n      placeholder: \"Enter Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"MQTT password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    {\n      name: \"qos\",\n      label: \"QOS\",\n      tooltip: \"Set the quality of service priority, defaults to '0'\",\n      type: \"number\",\n      placeholder: \"Enter QOS\",\n    },\n    {\n      name: \"keep_alive_interval\",\n      label: \"Keep Alive Interval\",\n      tooltip: \"Keep-alive interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Keep Alive Internal\",\n    },\n    {\n      name: \"reconnect_interval\",\n      label: \"Reconnect Interval\",\n      tooltip: \"Reconnect interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Reconnect Interval\",\n    },\n    ...commonFields,\n  ],\n  [notifyNats]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"NATS server address e.g. '0.0.0.0:4222'\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"subject\",\n      required: true,\n      label: \"Subject\",\n      tooltip: \"NATS subscription subject\",\n      type: \"string\",\n      placeholder: \"Enter NATS Subject\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"NATS username\",\n      type: \"string\",\n      placeholder: \"Enter NATS Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"NATS password\",\n      type: \"string\",\n      placeholder: \"Enter NATS password\",\n    },\n    {\n      name: \"token\",\n      label: \"Token\",\n      tooltip: \"NATS token\",\n      type: \"string\",\n      placeholder: \"Enter NATS token\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"ping_interval\",\n      label: \"Ping Interval\",\n      tooltip: \"Client ping commands interval in s,m,h,d. Disabled by default\",\n      type: \"duration\",\n      placeholder: \"Enter Ping Interval\",\n    },\n    {\n      name: \"streaming\",\n      label: \"Streaming\",\n      tooltip: \"Set to 'on', to use streaming NATS server\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_async\",\n      label: \"Streaming async\",\n      tooltip: \"Set to 'on', to enable asynchronous publish\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_max_pub_acks_in_flight\",\n      label: \"Streaming max publish ACKS in flight\",\n      tooltip: \"Number of messages to publish without waiting for ACKs\",\n      type: \"number\",\n      placeholder: \"Enter Streaming in flight value\",\n    },\n    {\n      name: \"streaming_cluster_id\",\n      label: \"Streaming Cluster ID\",\n      tooltip: \"Unique ID for NATS streaming cluster\",\n      type: \"string\",\n      placeholder: \"Enter Streaming Cluster ID\",\n    },\n    {\n      name: \"cert_authority\",\n      label: \"Cert Authority\",\n      tooltip: \"Path to certificate chain of the target NATS server\",\n      type: \"string\",\n      placeholder: \"Enter Cert Authority\",\n    },\n    {\n      name: \"client_cert\",\n      label: \"Client Cert\",\n      tooltip: \"Client cert for NATS mTLS auth\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_key\",\n      label: \"Client Key\",\n      tooltip: \"Client cert key for NATS mTLS auth\",\n      type: \"string\",\n      placeholder: \"Enter Client Key\",\n    },\n    ...commonFields,\n  ],\n  [notifyElasticsearch]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"Elasticsearch server's address, with optional authentication info\",\n      type: \"url\",\n      placeholder: \"Enter URL\",\n    },\n    {\n      name: \"index\",\n      required: true,\n      label: \"Index\",\n      tooltip:\n        \"Elasticsearch index to store/update events, index is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Index\",\n    },\n    {\n      name: \"format\",\n      required: true,\n      label: \"Format\",\n      tooltip:\n        \"'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\",\n      type: \"enum\",\n      placeholder: \"Enter Format\",\n    },\n    ...commonFields,\n  ],\n  [notifyWebhooks]: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      tooltip:\n        \"webhook server endpoint e.g. http://localhost:8080/minio/events\",\n      type: \"url\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      label: \"Auth Token\",\n      tooltip: \"opaque string or JWT authorization token\",\n      type: \"string\",\n      placeholder: \"Enter auth_token\",\n    },\n    ...commonFields,\n  ],\n  [notifyNsq]: [\n    {\n      name: \"nsqd_address\",\n      required: true,\n      label: \"NSQD Address\",\n      tooltip: \"NSQ server address e.g. '127.0.0.1:4150'\",\n      type: \"address\",\n      placeholder: \"Enter nsqd_address\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"NSQ topic\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    ...commonFields,\n  ],\n};\n"],"names":["withStyles","theme","createStyles","link","display","alignItems","textDecoration","maxWidth","padding","color","palette","primary","light","fontSize","icon","marginRight","justifyContent","width","to","label","classes","className","executeOnClick","onClick","pageContentStyles","children","contentSpacer","container","item","xs","mapDispatchToProps","toggleList","connector","connect","state","sidebarOpen","system","operatorMode","managerObjects","objectBrowser","objectManager","objectsToManage","headerContainer","minHeight","backgroundColor","left","boxShadow","labelStyle","fontWeight","marginLeft","marginTop","rightMenu","textAlign","logo","fill","main","middleComponent","actions","direction","sm","md","sx","paddingTop","variant","length","component","size","withLogos","servicesList","elService","settingsCommon","typesSelection","Fragment","IAM_PAGES","iconContainer","map","lambdaNotif","history","actionTrigger","lambdaNotifIcon","src","logoButton","alt","targetTitle","lambdaNotifTitle","notifyPostgres","notifyMysql","notifyKafka","notifyAmqp","notifyMqtt","notifyRedis","notifyNats","notifyElasticsearch","notifyWebhooks","notifyNsq","notificationTransform","notificationElements","element","service_name","service","account_id","status","commonFields","name","required","tooltip","type","placeholder","removeEmptyFields","formFields","filter","field","value","notificationEndpointsFields"],"sourceRoot":""}