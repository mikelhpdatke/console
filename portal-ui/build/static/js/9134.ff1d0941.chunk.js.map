{"version":3,"file":"static/js/9134.ff1d0941.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Policies/PolicySelectors.tsx","screens/Console/Policies/SetPolicy.tsx"],"sourcesContent":["import React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { predefinedList } from \"../common/styleLibrary\";\n\ninterface IPredefinedList {\n  classes: any;\n  label?: string;\n  content: any;\n  multiLine?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...predefinedList,\n  });\n\nconst PredefinedList = ({\n  classes,\n  label = \"\",\n  content,\n  multiLine = false,\n}: IPredefinedList) => {\n  return (\n    <Fragment>\n      <Grid className={classes.prefinedContainer}>\n        {label !== \"\" && (\n          <Grid item xs={12} className={classes.predefinedTitle}>\n            {label}\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.predefinedList}>\n          <Grid\n            item\n            xs={12}\n            className={\n              multiLine ? classes.innerContentMultiline : classes.innerContent\n            }\n          >\n            {content}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PredefinedList);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"0 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <ModalError />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { policySort } from \"../../../utils/sortFunctions\";\nimport {\n  actionsTray,\n  searchField,\n  selectorsCommon,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { PolicyList } from \"./types\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport SearchBox from \"../Common/SearchBox\";\n\ninterface ISelectPolicyProps {\n  classes: any;\n  selectedPolicy?: string[];\n  setSelectedPolicy: any;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    noFound: {\n      textAlign: \"center\",\n      padding: \"10px 0\",\n    },\n    searchBox: {\n      flex: 1,\n    },\n    fieldLabel: {\n      fontWeight: 400,\n      width: 160,\n      marginRight: 10,\n    },\n    tableBlock: {\n      ...tableStyles.tableBlock,\n    },\n    filterBox: {\n      display: \"flex\",\n      marginBottom: 15,\n      alignItems: \"center\",\n      \"& span\": {\n        fontSize: 14,\n      },\n    },\n    ...searchField,\n    ...tableStyles,\n    ...actionsTray,\n    ...selectorsCommon,\n  });\n\nconst PolicySelectors = ({\n  classes,\n  selectedPolicy = [],\n  setSelectedPolicy,\n  setModalErrorSnackMessage,\n}: ISelectPolicyProps) => {\n  // Local State\n  const [records, setRecords] = useState<any[]>([]);\n  const [loading, isLoading] = useState<boolean>(false);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  const fetchPolicies = useCallback(() => {\n    isLoading(true);\n\n    api\n      .invoke(\"GET\", `/api/v1/policies?limit=1000`)\n      .then((res: PolicyList) => {\n        const policies = res.policies === null ? [] : res.policies;\n        isLoading(false);\n        setRecords(policies.sort(policySort));\n      })\n      .catch((err: ErrorResponseHandler) => {\n        isLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  }, [setModalErrorSnackMessage]);\n\n  //Effects\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      fetchPolicies();\n    }\n  }, [loading, fetchPolicies]);\n\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...selectedPolicy]; // We clone the checkedUsers array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to checkedUsersList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    // remove empty values\n    elements = elements.filter((element) => element !== \"\");\n\n    setSelectedPolicy(elements);\n  };\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.name.includes(filter)\n  );\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12}>\n        {loading && <LinearProgress />}\n        {records.length > 0 ? (\n          <React.Fragment>\n            <Grid item xs={12} className={classes.filterBox}>\n              <span className={classes.fieldLabel}>Assign Policies</span>\n              <div className={classes.searchBox}>\n                <SearchBox\n                  placeholder=\"Filter Policy\"\n                  onChange={(value) => {\n                    setFilter(value);\n                  }}\n                  value={filter}\n                />\n              </div>\n            </Grid>\n            <Grid item xs={12} className={classes.tableBlock}>\n              <TableWrapper\n                columns={[{ label: \"Policy\", elementKey: \"name\" }]}\n                onSelect={selectionChanged}\n                selectedItems={selectedPolicy}\n                isLoading={loading}\n                records={filteredRecords}\n                entityName=\"Policies\"\n                idField=\"name\"\n                customPaperHeight={classes.multiSelectTable}\n              />\n            </Grid>\n          </React.Fragment>\n        ) : (\n          <div className={classes.noFound}>No Policies Available</div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(PolicySelectors));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  modalBasic,\n  spacingUtils,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { User } from \"../Users/types\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport api from \"../../../common/api\";\nimport PolicySelectors from \"./PolicySelectors\";\nimport PredefinedList from \"../Common/FormComponents/PredefinedList/PredefinedList\";\n\ninterface ISetPolicyProps {\n  classes: any;\n  closeModalAndRefresh: () => void;\n  selectedUser: User | null;\n  selectedGroup: string | null;\n  open: boolean;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n    ...spacingUtils,\n    tableBlock: {\n      ...tableStyles.tableBlock,\n      marginTop: 15,\n    },\n    buttonContainer: {\n      textAlign: \"right\",\n      marginTop: \".9rem\",\n    },\n  });\n\nconst SetPolicy = ({\n  classes,\n  closeModalAndRefresh,\n  selectedUser,\n  selectedGroup,\n  setModalErrorSnackMessage,\n  open,\n}: ISetPolicyProps) => {\n  //Local States\n  const [loading, setLoading] = useState<boolean>(false);\n  const [actualPolicy, setActualPolicy] = useState<string[]>([]);\n  const [selectedPolicy, setSelectedPolicy] = useState<string[]>([]);\n\n  const setPolicyAction = () => {\n    let entity = \"user\";\n    let value = null;\n    if (selectedGroup !== null) {\n      entity = \"group\";\n      value = selectedGroup;\n    } else {\n      if (selectedUser !== null) {\n        value = selectedUser.accessKey;\n      }\n    }\n\n    setLoading(true);\n\n    api\n      .invoke(\"PUT\", `/api/v1/set-policy`, {\n        name: selectedPolicy,\n        entityName: value,\n        entityType: entity,\n      })\n      .then(() => {\n        setLoading(false);\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  const fetchGroupInformation = () => {\n    if (selectedGroup) {\n      api\n        .invoke(\"GET\", `/api/v1/group?name=${encodeURI(selectedGroup)}`)\n        .then((res: any) => {\n          const groupPolicy: String = get(res, \"policy\", \"\");\n          setActualPolicy(groupPolicy.split(\",\"));\n          setSelectedPolicy(groupPolicy.split(\",\"));\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setModalErrorSnackMessage(err);\n          setLoading(false);\n        });\n    }\n  };\n\n  const resetSelection = () => {\n    setSelectedPolicy(actualPolicy);\n  };\n\n  useEffect(() => {\n    if (open) {\n      if (selectedGroup !== null) {\n        fetchGroupInformation();\n        return;\n      }\n\n      const userPolicy: string[] = get(selectedUser, \"policy\", []);\n      setActualPolicy(userPolicy);\n      setSelectedPolicy(userPolicy);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open, selectedGroup, selectedUser]);\n\n  const userName = get(selectedUser, \"accessKey\", \"\");\n\n  return (\n    <ModalWrapper\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      modalOpen={open}\n      title=\"Set Policies\"\n    >\n      <Grid item xs={12}>\n        <PredefinedList\n          label={`Selected ${selectedGroup !== null ? \"Group\" : \"User\"}`}\n          content={selectedGroup !== null ? selectedGroup : userName}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <PredefinedList\n          label={\"Current Policy\"}\n          content={actualPolicy.join(\", \")}\n        />\n      </Grid>\n      <div className={classes.tableBlock}>\n        <PolicySelectors\n          selectedPolicy={selectedPolicy}\n          setSelectedPolicy={setSelectedPolicy}\n        />\n      </div>\n      <Grid item xs={12} className={classes.buttonContainer}>\n        <Button\n          type=\"button\"\n          variant=\"outlined\"\n          color=\"primary\"\n          className={classes.spacerRight}\n          onClick={resetSelection}\n        >\n          Reset\n        </Button>\n        <Button\n          type=\"button\"\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={loading}\n          onClick={setPolicyAction}\n        >\n          Save\n        </Button>\n      </Grid>\n      {loading && (\n        <Grid item xs={12}>\n          <LinearProgress />\n        </Grid>\n      )}\n    </ModalWrapper>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(SetPolicy));\n"],"names":["withStyles","theme","createStyles","predefinedList","classes","label","content","multiLine","Fragment","className","prefinedContainer","item","xs","predefinedTitle","innerContentMultiline","innerContent","timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","setModalErrorSnackMessage","connect","state","modalSnackMessage","system","modalSnackBar","modalErrorContainer","position","marginTop","width","backgroundColor","border","borderLeftWidth","borderRadius","zIndex","padding","left","transform","opacity","transitionDuration","modalErrorShow","closeButton","right","fontSize","cursor","errorTitle","display","alignItems","errorLabel","color","fontWeight","marginLeft","marginRight","messageIcon","height","detailsButton","paddingLeft","transformDuration","extraDetailsContainer","fontStyle","lineHeight","transition","overflow","extraDetailsOpen","arrowElement","arrowOpen","customStyle","useState","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","useEffect","detailedError","errorMessage","message","type","get","messageDetails","style","onMouseOver","onMouseLeave","setInterval","onClick","Close","ErrorOutline","detailsContainerLink","ArrowRight","connector","setModalSnackMessage","deleteDialogStyles","root","paddingBottom","customDialogSize","maxWidth","snackBarCommon","onClose","modalOpen","title","children","wideLimit","noContentPadding","titleIcon","openSnackbar","setOpenSnackbar","customSize","paper","fullWidth","detailedErrorMsg","length","Dialog","open","scroll","event","reason","DialogTitle","titleText","closeContainer","IconButton","disableRipple","size","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","DialogContent","noFound","textAlign","searchBox","flex","fieldLabel","tableBlock","tableStyles","filterBox","marginBottom","searchField","actionsTray","selectorsCommon","selectedPolicy","setSelectedPolicy","records","setRecords","loading","isLoading","filter","setFilter","fetchPolicies","api","then","res","policies","sort","policySort","catch","err","filteredRecords","elementItem","name","includes","placeholder","onChange","value","columns","elementKey","onSelect","e","targetD","target","checked","elements","push","element","selectedItems","entityName","idField","customPaperHeight","multiSelectTable","modalBasic","spacingUtils","buttonContainer","closeModalAndRefresh","selectedUser","selectedGroup","setLoading","actualPolicy","setActualPolicy","encodeURI","groupPolicy","split","userPolicy","userName","join","variant","spacerRight","disabled","entity","accessKey","entityType"],"sourceRoot":""}