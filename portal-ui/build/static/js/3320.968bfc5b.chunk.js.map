{"version":3,"file":"static/js/3320.968bfc5b.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Policies/AddPolicy.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport \"codemirror/theme/dracula.css\";\n/** Code mirror */\nimport CodeMirror, { Extension } from \"@uiw/react-codemirror\";\nimport { StreamLanguage } from \"@codemirror/stream-parser\";\nimport { json } from \"@codemirror/lang-json\";\nimport { yaml } from \"@codemirror/legacy-modes/mode/yaml\";\n\n/** Code mirror */\nimport { Box, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport { fieldBasic } from \"../common/styleLibrary\";\nimport { CopyIcon, EditorThemeSwitchIcon } from \"../../../../../icons\";\nimport RBIconButton from \"../../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { EditorView } from \"@codemirror/view\";\n\ninterface ICodeWrapper {\n  value: string;\n  label?: string;\n  mode?: string;\n  tooltip?: string;\n  classes: any;\n  onChange?: (editor: any, data: any, value: string) => any;\n  onBeforeChange: (editor: any, data: any, value: string) => any;\n  readOnly?: boolean;\n  editorHeight?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n  });\n\nconst langHighlight: Record<string, any> = {\n  json,\n  yaml: () => StreamLanguage.define(yaml),\n};\n\nconst lightTheme = EditorView.theme(\n  {\n    \"&\": {\n      backgroundColor: \"#FBFAFA\",\n    },\n    \".cm-content\": {\n      caretColor: \"#05122B\",\n    },\n    \"&.cm-focused .cm-cursor\": {\n      borderLeftColor: \"#05122B\",\n    },\n    \".cm-gutters\": {\n      backgroundColor: \"#FBFAFA\",\n      color: \"#000000\",\n      border: \"none\",\n    },\n    \".cm-gutter.cm-foldGutter\": {\n      borderRight: \"1px solid #eaeaea\",\n    },\n    \".cm-gutterElement\": {\n      fontSize: \"13px\",\n    },\n    \".cm-line\": {\n      fontSize: \"13px\",\n      color: \"#2781B0\",\n      \"& .ͼc\": {\n        color: \"#C83B51\",\n      },\n    },\n    \"& .ͼb\": {\n      color: \"#2781B0\",\n    },\n    \".cm-activeLine\": {\n      backgroundColor: \"#dde1f1\",\n    },\n    \".cm-matchingBracket\": {\n      backgroundColor: \"#05122B\",\n      color: \"#ffffff\",\n    },\n    \".cm-selectionMatch\": {\n      backgroundColor: \"#ebe7f1\",\n    },\n    \".cm-selectionLayer\": {\n      fontWeight: 500,\n    },\n    \" .cm-selectionBackground\": {\n      backgroundColor: \"#a180c7\",\n      color: \"#ffffff\",\n    },\n  },\n  {\n    dark: false,\n  }\n);\n\nconst darkTheme = EditorView.theme(\n  {\n    \"&\": {\n      backgroundColor: \"#282a36\",\n      color: \"#ffb86c\",\n    },\n\n    \".cm-gutter.cm-foldGutter\": {\n      borderRight: \"1px solid #eaeaea\",\n    },\n    \".cm-gutterElement\": {\n      fontSize: \"13px\",\n    },\n    \".cm-line\": {\n      fontSize: \"13px\",\n      \"& .ͼd, & .ͼc\": {\n        color: \"#8e6cef\",\n      },\n    },\n    \"& .ͼb\": {\n      color: \"#2781B0\",\n    },\n    \".cm-activeLine\": {\n      backgroundColor: \"#44475a\",\n    },\n    \".cm-matchingBracket\": {\n      backgroundColor: \"#842de5\",\n      color: \"#ff79c6\",\n    },\n    \".cm-selectionLayer .cm-selectionBackground\": {\n      backgroundColor: \"green\",\n    },\n  },\n  {\n    dark: true,\n  }\n);\n\nconst CodeMirrorWrapper = ({\n  value,\n  label = \"\",\n  tooltip = \"\",\n  mode = \"json\",\n  classes,\n  onBeforeChange,\n  readOnly = false,\n  editorHeight = \"250px\",\n}: ICodeWrapper) => {\n  const [isDarkTheme, setIsDarkTheme] = useState<boolean>(false);\n\n  //based on the language mode pick . default to json\n  let extensionList: Extension[] = [];\n  if (langHighlight[mode]) {\n    extensionList = [...extensionList, langHighlight[mode]()];\n  }\n\n  return (\n    <React.Fragment>\n      <InputLabel className={classes.inputLabel}>\n        <span>{label}</span>\n        {tooltip !== \"\" && (\n          <div className={classes.tooltipContainer}>\n            <Tooltip title={tooltip} placement=\"top-start\">\n              <div className={classes.tooltip}>\n                <HelpIcon />\n              </div>\n            </Tooltip>\n          </div>\n        )}\n      </InputLabel>\n      <Grid item xs={12}>\n        <br />\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        sx={{\n          border: \"1px solid #eaeaea\",\n        }}\n      >\n        <Grid item xs={12}>\n          <CodeMirror\n            value={value}\n            theme={isDarkTheme ? darkTheme : lightTheme}\n            extensions={extensionList}\n            editable={!readOnly}\n            basicSetup={true}\n            height={editorHeight}\n            onChange={(v: string, vu: any) => {\n              onBeforeChange(null, null, v);\n            }}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sx={{\n            borderTop: \"1px solid #eaeaea\",\n            background: isDarkTheme ? \"#282c34\" : \"#f7f7f7\",\n          }}\n        >\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              padding: \"2px\",\n              paddingRight: \"5px\",\n              justifyContent: \"flex-end\",\n              \"& button\": {\n                height: \"26px\",\n                width: \"26px\",\n                padding: \"2px\",\n                \" .min-icon\": {\n                  marginLeft: \"0\",\n                },\n              },\n            }}\n          >\n            <RBIconButton\n              tooltip={\"Change theme\"}\n              onClick={() => {\n                setIsDarkTheme(!isDarkTheme);\n              }}\n              text={\"\"}\n              icon={<EditorThemeSwitchIcon />}\n              color={\"primary\"}\n              variant={\"outlined\"}\n            />\n            <CopyToClipboard text={value}>\n              <RBIconButton\n                tooltip={\"Copy to Clipboard\"}\n                onClick={() => {}}\n                text={\"\"}\n                icon={<CopyIcon />}\n                color={\"primary\"}\n                variant={\"outlined\"}\n              />\n            </CopyToClipboard>\n          </Box>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CodeMirrorWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"0 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <ModalError />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport api from \"../../../common/api\";\nimport { Policy } from \"./types\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport {\n  fieldBasic,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport CodeMirrorWrapper from \"../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    codeMirrorContainer: {\n      marginBottom: 20,\n      marginTop: 20,\n      \"& label\": {\n        marginBottom: \".5rem\",\n      },\n      \"& label + div\": {\n        display: \"none\",\n      },\n    },\n    ...spacingUtils,\n    ...modalStyleUtils,\n    ...fieldBasic,\n  });\n\ninterface IAddPolicyProps {\n  classes: any;\n  open: boolean;\n  closeModalAndRefresh: (refresh: boolean) => void;\n  policyEdit: Policy;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst AddPolicy = ({\n  classes,\n  open,\n  closeModalAndRefresh,\n  policyEdit,\n  setModalErrorSnackMessage,\n}: IAddPolicyProps) => {\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [policyName, setPolicyName] = useState<string>(\"\");\n  const [policyDefinition, setPolicyDefinition] = useState<string>(\"\");\n\n  const addRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    api\n      .invoke(\"POST\", \"/api/v1/policies\", {\n        name: policyName,\n        policy: policyDefinition,\n      })\n      .then((res) => {\n        setAddLoading(false);\n\n        closeModalAndRefresh(true);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  useEffect(() => {\n    if (policyEdit) {\n      setPolicyName(policyEdit.name);\n      setPolicyDefinition(\n        policyEdit ? JSON.stringify(JSON.parse(policyEdit.policy), null, 4) : \"\"\n      );\n    }\n  }, [policyEdit]);\n\n  const resetForm = () => {\n    setPolicyName(\"\");\n    setPolicyDefinition(\"\");\n  };\n\n  const validSave = policyName.trim() !== \"\";\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title={`${policyEdit ? \"Info\" : \"Create\"} Policy`}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          addRecord(e);\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.modalFormScrollable}>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"policy-name\"\n                name=\"policy-name\"\n                label=\"Policy Name\"\n                placeholder=\"Enter Policy Name\"\n                autoFocus={true}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setPolicyName(e.target.value);\n                }}\n                value={policyName}\n                disabled={!!policyEdit}\n              />\n            </Grid>\n\n            <Grid item xs={12} className={classes.codeMirrorContainer}>\n              <CodeMirrorWrapper\n                label={`${policyEdit ? \"Edit\" : \"Write\"} Policy`}\n                value={policyDefinition}\n                onBeforeChange={(editor, data, value) => {\n                  setPolicyDefinition(value);\n                }}\n                editorHeight={\"350px\"}\n              />\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            {!policyEdit && (\n              <Button\n                type=\"button\"\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={resetForm}\n              >\n                Clear\n              </Button>\n            )}\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={addLoading || !validSave}\n            >\n              Save\n            </Button>\n          </Grid>\n          {addLoading && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(AddPolicy));\n"],"names":["langHighlight","json","yaml","StreamLanguage","lightTheme","EditorView","backgroundColor","caretColor","borderLeftColor","color","border","borderRight","fontSize","fontWeight","dark","darkTheme","withStyles","theme","createStyles","fieldBasic","inputLabel","value","label","tooltip","mode","classes","onBeforeChange","readOnly","editorHeight","useState","isDarkTheme","setIsDarkTheme","extensionList","className","tooltipContainer","title","placement","item","xs","sx","extensions","editable","basicSetup","height","onChange","v","vu","borderTop","background","display","alignItems","padding","paddingRight","justifyContent","width","marginLeft","onClick","text","icon","variant","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","id","name","type","autoComplete","disabled","multiline","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","autoFocus","inputProps","container","clsx","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","fullWidth","helperText","inputRebase","size","disableFocusRipple","disableRipple","disableTouchRipple","timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","setModalErrorSnackMessage","connect","state","modalSnackMessage","system","modalSnackBar","modalErrorContainer","marginTop","borderLeftWidth","borderRadius","zIndex","left","transform","opacity","transitionDuration","modalErrorShow","closeButton","cursor","errorTitle","errorLabel","marginRight","messageIcon","detailsButton","paddingLeft","transformDuration","extraDetailsContainer","fontStyle","lineHeight","transition","overflow","extraDetailsOpen","arrowElement","arrowOpen","customStyle","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","useEffect","detailedError","errorMessage","message","get","messageDetails","Fragment","style","onMouseOver","onMouseLeave","setInterval","Close","ErrorOutline","detailsContainerLink","ArrowRight","connector","setModalSnackMessage","deleteDialogStyles","root","content","paddingBottom","customDialogSize","snackBarCommon","onClose","modalOpen","children","wideLimit","noContentPadding","titleIcon","openSnackbar","setOpenSnackbar","customSize","paper","detailedErrorMsg","length","Dialog","open","scroll","event","reason","DialogTitle","titleText","closeContainer","IconButton","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","DialogContent","buttonContainer","textAlign","codeMirrorContainer","marginBottom","spacingUtils","modalStyleUtils","closeModalAndRefresh","policyEdit","addLoading","setAddLoading","policyName","setPolicyName","policyDefinition","setPolicyDefinition","JSON","stringify","parse","policy","validSave","trim","noValidate","onSubmit","e","preventDefault","api","then","res","catch","err","modalFormScrollable","formFieldRow","target","editor","data","modalButtonBar"],"sourceRoot":""}