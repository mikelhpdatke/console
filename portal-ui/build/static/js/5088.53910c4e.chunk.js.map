{"version":3,"file":"static/js/5088.53910c4e.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","screens/Console/Common/Layout/PageLayout.tsx","screens/Console/Common/PageHeader/PageHeader.tsx","screens/Console/HealthInfo/types.ts","screens/Console/Common/TestWrapper/TestWrapper.tsx","screens/Console/HealthInfo/HealthInfo.tsx","utils/wsUtils.ts","../node_modules/@mui/icons-material/ArrowForwardIos.js","../node_modules/es5-ext/global.js","../node_modules/websocket/lib/browser.js","../node_modules/websocket/lib/version.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid #E2E2E2\",\n      borderRadius: 2,\n      backgroundColor: \"#FBFAFA\",\n      paddingLeft: 25,\n      paddingTop: 31,\n      paddingBottom: 21,\n      paddingRight: 30,\n    },\n    leftItems: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 15,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& .min-icon\": {\n        marginRight: 15,\n        height: 28,\n        width: 38,\n      },\n    },\n    helpText: {\n      fontSize: 16,\n      paddingLeft: 5,\n    },\n  });\n\ninterface IHelpBox {\n  classes: any;\n  iconComponent: any;\n  title: string;\n  help: any;\n}\n\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} className={classes.leftItems}>\n          {iconComponent}\n          {title}\n        </Grid>\n        <Grid item xs={12} className={classes.helpText}>\n          {help}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HelpBox);\n","import React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { pageContentStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...pageContentStyles,\n  });\n\ntype PageLayoutProps = {\n  className?: string;\n  classes?: any;\n  children: any;\n};\n\nconst PageLayout = ({ classes, className = \"\", children }: PageLayoutProps) => {\n  return (\n    <div className={classes.contentSpacer}>\n      <Grid container>\n        <Grid item xs={12} className={className}>\n          {children}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(PageLayout);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { AppState } from \"../../../../store\";\nimport OperatorLogo from \"../../../../icons/OperatorLogo\";\nimport ConsoleLogo from \"../../../../icons/ConsoleLogo\";\nimport { IFileItem } from \"../../ObjectBrowser/reducers\";\nimport { toggleList } from \"../../ObjectBrowser/actions\";\nimport { ObjectManagerIcon } from \"../../../../icons\";\n\ninterface IPageHeader {\n  classes: any;\n  sidebarOpen?: boolean;\n  operatorMode?: boolean;\n  label: any;\n  actions?: any;\n  managerObjects?: IFileItem[];\n  toggleList: typeof toggleList;\n  middleComponent?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      width: \"100%\",\n      minHeight: 79,\n      display: \"flex\",\n      backgroundColor: \"#fff\",\n      left: 0,\n      boxShadow: \"rgba(0,0,0,.08) 0 3px 10px\",\n    },\n    label: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n    },\n    labelStyle: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 700,\n      marginLeft: 34,\n      marginTop: 8,\n    },\n    rightMenu: {\n      textAlign: \"right\",\n    },\n    logo: {\n      marginLeft: 34,\n      fill: theme.palette.primary.main,\n      \"& .min-icon\": {\n        width: 120,\n      },\n    },\n    middleComponent: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  });\n\nconst PageHeader = ({\n  classes,\n  label,\n  actions,\n  sidebarOpen,\n  operatorMode,\n  managerObjects,\n  toggleList,\n  middleComponent,\n}: IPageHeader) => {\n  return (\n    <Grid\n      container\n      className={`${classes.headerContainer} page-header`}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Grid\n        item\n        xs={12}\n        sm={12}\n        md={middleComponent ? 3 : 6}\n        className={classes.label}\n        sx={{\n          paddingTop: [\"15px\", \"15px\", \"0\", \"0\"],\n        }}\n      >\n        {!sidebarOpen && (\n          <div className={classes.logo}>\n            {operatorMode ? <OperatorLogo /> : <ConsoleLogo />}\n          </div>\n        )}\n        <Typography variant=\"h4\" className={classes.labelStyle}>\n          {label}\n        </Typography>\n      </Grid>\n      {middleComponent && (\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={6}\n          className={classes.middleComponent}\n          sx={{ marginTop: [\"10px\", \"10px\", \"0\", \"0\"] }}\n        >\n          {middleComponent}\n        </Grid>\n      )}\n      <Grid\n        item\n        xs={12}\n        sm={12}\n        md={middleComponent ? 3 : 6}\n        className={classes.rightMenu}\n      >\n        {actions && actions}\n        {managerObjects && managerObjects.length > 0 && (\n          <IconButton\n            color=\"primary\"\n            aria-label=\"Refresh List\"\n            component=\"span\"\n            onClick={() => {\n              toggleList();\n            }}\n            size=\"large\"\n          >\n            <ObjectManagerIcon />\n          </IconButton>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  sidebarOpen: state.system.sidebarOpen,\n  operatorMode: state.system.operatorMode,\n  managerObjects: state.objectBrowser.objectManager.objectsToManage,\n});\n\nconst mapDispatchToProps = {\n  toggleList,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(PageHeader));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const DiagStatError = \"error\";\nexport const DiagStatSuccess = \"success\";\nexport const DiagStatInProgress = \"inProgress\";\nexport interface HealthInfoMessage {\n  timestamp: Date;\n  error: string;\n  perf: perfInfo;\n  minio: minioHealthInfo;\n  sys: sysHealthInfo;\n}\n\nexport interface perfInfo {\n  drives: serverDrivesInfo[];\n  net: serverNetHealthInfo[];\n  net_parallel: serverNetHealthInfo;\n  error: string;\n}\n\nexport interface serverDrivesInfo {\n  addr: string;\n  serial: drivePerfInfo[];\n  parallel: drivePerfInfo[];\n  error: string;\n}\n\nexport interface drivePerfInfo {\n  endpoint: string;\n  latency: diskLatency;\n  throughput: diskThroughput;\n  error: string;\n}\nexport interface diskLatency {\n  avg_secs: number;\n  percentile50_secs: number;\n  percentile90_secs: number;\n  percentile99_secs: number;\n  min_secs: number;\n  max_secs: number;\n}\n\nexport interface diskThroughput {\n  avg_bytes_per_sec: number;\n  percentile50_bytes_per_sec: number;\n  percentile90_bytes_per_sec: number;\n  percentile99_bytes_per_sec: number;\n  min_bytes_per_sec: number;\n  max_bytes_per_sec: number;\n}\n\nexport interface serverNetHealthInfo {\n  addr: string;\n  net: netPerfInfo[];\n  error: string;\n}\n\nexport interface netPerfInfo {\n  remote: string;\n  latency: netLatency;\n  throughput: netThroughput;\n  error: string;\n}\n\nexport interface netLatency {\n  avg_secs: number;\n  percentile50_secs: number;\n  percentile90_secs: number;\n  percentile99_secs: number;\n  min_secs: number;\n  max_secs: number;\n}\nexport interface netThroughput {\n  avg_bytes_per_sec: number;\n  percentile50_bytes_per_sec: number;\n  percentile90_bytes_per_sec: number;\n  percentile99_bytes_per_sec: number;\n  min_bytes_per_sec: number;\n  max_bytes_per_sec: number;\n}\n\nexport interface minioHealthInfo {\n  info: infoMessage;\n  config: any;\n  error: string;\n}\n\nexport interface infoMessage {\n  mode: string;\n  domain: string[];\n  region: string;\n  sqsARN: string[];\n  deploymentID: string;\n  buckets: buckets;\n  objects: objects;\n  usage: usage;\n  services: services;\n  backend: any;\n  servers: serverProperties[];\n}\n\nexport interface buckets {\n  count: number;\n}\n\nexport interface objects {\n  count: number;\n}\n\nexport interface usage {\n  size: number;\n}\n\nexport interface services {\n  vault: vault;\n  ldap: ldap;\n  logger: Map<string, status[]>[];\n  audit: Map<string, status[]>[];\n  notifications: Map<string, Map<string, status[]>[]>;\n}\n\nexport interface vault {\n  status: string;\n  encrypt: string;\n  decrypt: string;\n}\n\nexport interface ldap {\n  status: string;\n}\n\nexport interface status {\n  status: string;\n}\n\nexport interface serverProperties {\n  state: string;\n  endpoint: string;\n  uptime: number;\n  version: string;\n  commitID: string;\n  network: Map<string, string>;\n  drives: disk[];\n}\n\nexport interface disk {\n  endpoint: string;\n  rootDisk: boolean;\n  path: string;\n  healing: boolean;\n  state: string;\n  uuid: string;\n  model: string;\n  totalspace: number;\n  usedspace: number;\n  availspace: number;\n  readthroughput: number;\n  writethroughput: number;\n  readlatency: number;\n  writelatency: number;\n  utilization: number;\n}\n\nexport interface sysHealthInfo {\n  cpus: serverCpuInfo[];\n  drives: serverDiskHwInfo[];\n  osinfos: serverOsInfo[];\n  meminfos: serverMemInfo[];\n  procinfos: serverProcInfo[];\n  error: string;\n}\n\nexport interface serverCpuInfo {\n  addr: string;\n  cpu: cpuInfoStat[];\n  time: cpuTimeStat[];\n  error: string;\n}\n\nexport interface cpuInfoStat {\n  cpu: number;\n  vendorId: string;\n  family: string;\n  model: string;\n  stepping: number;\n  physicalId: string;\n  coreId: string;\n  cores: number;\n  modelName: string;\n  mhz: number;\n  cacheSize: number;\n  flags: string[];\n  microcode: string;\n}\n\nexport interface cpuTimeStat {\n  cpu: string;\n  user: number;\n  system: number;\n  idle: number;\n  nice: number;\n  iowait: number;\n  irq: number;\n  softirq: number;\n  steal: number;\n  guest: number;\n  guestNice: number;\n}\n\nexport interface serverDiskHwInfo {\n  addr: string;\n  usages: diskUsageStat[];\n  partitions: partitionStat[];\n  counters: Map<string, diskIOCountersStat>;\n  error: string;\n}\n\nexport interface diskUsageStat {\n  path: string;\n  fstype: string;\n  total: number;\n  free: number;\n  used: number;\n  usedPercent: number;\n  inodesTotal: number;\n  inodesUsed: number;\n  inodesFree: number;\n  inodesUsedPercent: number;\n}\n\nexport interface partitionStat {\n  device: string;\n  mountpoint: string;\n  fstype: string;\n  opts: string;\n  smartInfo: smartInfo;\n}\n\nexport interface smartInfo {\n  device: string;\n  scsi: scsiInfo;\n  nvme: nvmeInfo;\n  ata: ataInfo;\n  error: string;\n}\n\nexport interface scsiInfo {\n  scsiCapacityBytes: number;\n  scsiModeSenseBuf: string;\n  scsirespLen: number;\n  scsiBdLen: number;\n  scsiOffset: number;\n  sciRpm: number;\n}\n\nexport interface nvmeInfo {\n  serialNum: string;\n  vendorId: string;\n  firmwareVersion: string;\n  modelNum: string;\n  spareAvailable: string;\n  spareThreshold: string;\n  temperature: string;\n  criticalWarning: string;\n  maxDataTransferPages: number;\n  controllerBusyTime: number;\n  powerOnHours: number;\n  powerCycles: number;\n  unsafeShutdowns: number;\n  mediaAndDataIntgerityErrors: number;\n  dataUnitsReadBytes: number;\n  dataUnitsWrittenBytes: number;\n  hostReadCommands: number;\n  hostWriteCommands: number;\n}\n\nexport interface ataInfo {\n  scsiLuWWNDeviceID: string;\n  serialNum: string;\n  modelNum: string;\n  firmwareRevision: string;\n  RotationRate: string;\n  MajorVersion: string;\n  MinorVersion: string;\n  smartSupportAvailable: boolean;\n  smartSupportEnabled: boolean;\n  smartErrorLog: string;\n  transport: string;\n}\n\nexport interface diskIOCountersStat {\n  readCount: number;\n  mergedReadCount: number;\n  DriteCount: number;\n  mergedWriteCount: number;\n  readBytes: number;\n  writeBytes: number;\n  readTime: number;\n  writeTime: number;\n  iopsInProgress: number;\n  ioTime: number;\n  weightedIO: number;\n  name: string;\n  serialNumber: string;\n  label: string;\n}\n\nexport interface serverOsInfo {\n  addr: string;\n  info: infoStat;\n  sensors: temperatureStat[];\n  users: userStat[];\n  error: string;\n}\n\nexport interface infoStat {\n  hostname: string;\n  uptime: number;\n  bootTime: number;\n  procs: number;\n  os: string;\n  platform: string;\n  platformFamily: string;\n  platformVersion: string;\n  kernelVersion: string;\n  kernelArch: string;\n  virtualizationSystem: string;\n  virtualizationRole: string;\n  hostid: string;\n}\n\nexport interface temperatureStat {\n  sensorKey: string;\n  sensorTemperature: number;\n}\n\nexport interface userStat {\n  user: string;\n  terminal: string;\n  host: string;\n  started: number;\n}\n\nexport interface serverMemInfo {\n  addr: string;\n  swap: swapMemoryStat;\n  virtualmem: virtualMemoryStat;\n  error: string;\n}\n\nexport interface swapMemoryStat {\n  total: number;\n  used: number;\n  free: number;\n  usedPercent: number;\n  sin: number;\n  sout: number;\n  pgin: number;\n  pgout: number;\n  pgfault: number;\n  pgmajfault: number;\n}\n\nexport interface virtualMemoryStat {\n  total: number;\n  available: number;\n  used: number;\n  usedPercent: number;\n  free: number;\n  active: number;\n  inactive: number;\n  wired: number;\n  laundry: number;\n  buffers: number;\n  cached: number;\n  writeback: number;\n  dirty: number;\n  writebacktmp: number;\n  shared: number;\n  slab: number;\n  sreclaimable: number;\n  sunreclaim: number;\n  pagetables: number;\n  swapcached: number;\n  commitlimit: number;\n  committedas: number;\n  hightotal: number;\n  highfree: number;\n  lowtotal: number;\n  lowfree: number;\n  swaptotal: number;\n  swapfree: number;\n  mapped: number;\n  vmalloctotal: number;\n  vmallocused: number;\n  vmallocchunk: number;\n  hugepagestotal: number;\n  hugepagesfree: number;\n  hugepagesize: number;\n}\n\nexport interface serverProcInfo {\n  addr: string;\n  processes: sysProcess[];\n  error: string;\n}\n\nexport interface sysProcess {\n  pid: number;\n  background: boolean;\n  cpupercent: number;\n  children: number[];\n  cmd: string;\n  connections: nethwConnectionStat[];\n  createtime: number;\n  cwd: string;\n  exe: string;\n  gids: number[];\n  iocounters: processIOCountersStat;\n  isrunning: boolean;\n  meminfo: memoryInfoStat;\n  memmaps: any[];\n  mempercent: number;\n  name: string;\n  netiocounters: nethwIOCounterStat[];\n  nice: number;\n  numctxswitches: processNmCtxSwitchesStat;\n  numfds: number;\n  numthreads: number;\n  pagefaults: processPageFaultsStat;\n  parent: number;\n  ppid: number;\n  rlimit: processRLimitStat[];\n  status: string;\n  tgid: number;\n  cputimes: cpuTimeStat;\n  uids: number[];\n  username: string;\n}\n\nexport interface nethwConnectionStat {\n  fd: number;\n  family: number;\n  type: number;\n  localaddr: netAddr;\n  remoteaddr: netAddr;\n  status: string;\n  uids: number[];\n  pid: number;\n}\n\nexport interface netAddr {\n  ip: string;\n  port: number;\n}\n\nexport interface processIOCountersStat {\n  readCount: number;\n  writeCount: number;\n  readBytes: number;\n  writeBytes: number;\n}\n\nexport interface memoryInfoStat {\n  rss: number;\n  vms: number;\n  hwm: number;\n  data: number;\n  stack: number;\n  locked: number;\n  swap: number;\n}\n\nexport interface nethwIOCounterStat {\n  name: string;\n  bytesSent: number;\n  bytesRecv: number;\n  packetsSent: number;\n  packetsRecv: number;\n  errin: number;\n  errout: number;\n  dropin: number;\n  dropout: number;\n  fifoin: number;\n  fifoout: number;\n}\n\nexport interface processNmCtxSwitchesStat {\n  voluntary: number;\n  involuntary: number;\n}\n\nexport interface processPageFaultsStat {\n  minorFaults: number;\n  majorFaults: number;\n  childMinorFaults: number;\n  childMajorFaults: number;\n}\n\nexport interface processRLimitStat {\n  resource: number;\n  soft: number;\n  hard: number;\n  used: number;\n}\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { CircularProgress, Grid } from \"@mui/material\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\nimport { DrivesIcon, VersionIcon } from \"../../../../icons\";\nimport { ServerInfo, Usage } from \"../../Dashboard/types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\n\ninterface ITestWrapper {\n  title: any;\n  children: any;\n  classes: any;\n  advancedVisible: boolean;\n  advancedContent?: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    titleBar: {\n      borderBottom: \"#E5E5E5 1px solid\",\n      padding: \"30px 25px\",\n      fontSize: 20,\n      color: \"#07193E\",\n      fontWeight: \"bold\",\n      borderRadius: \"10px 10px 0px 0px\",\n      paddingTop: 0,\n    },\n    divisorContainer: {\n      padding: 25,\n    },\n    serversData: {\n      color: \"#07193E\",\n      fontSize: 18,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg\": {\n        marginRight: 10,\n      },\n    },\n    minioVersionContainer: {\n      fontSize: 12,\n      color: \"#07193E\",\n      justifyContent: \"center\",\n      alignSelf: \"center\",\n      alignItems: \"center\",\n      display: \"flex\",\n    },\n    versionIcon: {\n      color: \"#07193E\",\n      marginRight: 20,\n    },\n    loaderAlign: {\n      textAlign: \"center\",\n    },\n    advancedContainer: {\n      justifyContent: \"flex-end\",\n      display: \"flex\",\n    },\n    optionsContainer: {\n      padding: 0,\n      marginBottom: 25,\n    },\n    advancedConfiguration: {\n      color: \"#2781B0\",\n      fontSize: 10,\n      textDecoration: \"underline\",\n      border: \"none\",\n      backgroundColor: \"transparent\",\n      cursor: \"pointer\",\n      alignItems: \"center\",\n      display: \"flex\",\n\n      \"&:hover\": {\n        color: \"#07193E\",\n      },\n\n      \"& svg\": {\n        width: 10,\n        alignSelf: \"center\",\n        marginLeft: 5,\n      },\n    },\n    advancedOpen: {\n      transform: \"rotateZ(-90deg) translateX(-4px) translateY(2px)\",\n    },\n    advancedClosed: {\n      transform: \"rotateZ(90deg)\",\n    },\n    advancedContent: {\n      backgroundColor: \"#F5F7F9\",\n      maxHeight: 0,\n      transitionDuration: \"0.3s\",\n      overflow: \"hidden\",\n      padding: \"0 15px\",\n      \"&.open\": {\n        maxHeight: 400,\n        padding: 15,\n      },\n    },\n  });\n\nconst TestWrapper = ({\n  title,\n  children,\n  classes,\n  advancedVisible,\n  advancedContent,\n}: ITestWrapper) => {\n  const [version, setVersion] = useState<string>(\"N/A\");\n  const [totalNodes, setTotalNodes] = useState<number>(0);\n  const [totalDrives, setTotalDrives] = useState<number>(0);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [advancedOpen, setAdvancedOpen] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/admin/info?defaultOnly=true`)\n        .then((res: Usage) => {\n          const totalServers = res.servers?.length;\n          setTotalNodes(totalServers);\n\n          if (res.servers.length > 0) {\n            setVersion(res.servers[0].version);\n\n            const totalServers = res.servers.reduce(\n              (prevTotal: number, currentElement: ServerInfo) => {\n                return prevTotal + currentElement.drives.length;\n              },\n              0\n            );\n            setTotalDrives(totalServers);\n          }\n\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n        });\n    }\n  }, [loading]);\n\n  return (\n    <Grid item xs={12}>\n      <Grid item xs={12} className={classes.titleBar}>\n        {title}\n      </Grid>\n      <Grid item xs={12}>\n        <Grid item xs={12} className={classes.optionsContainer}>\n          <Grid container className={classes.divisorContainer}>\n            {!loading ? (\n              <Fragment>\n                <Grid item xs={12} md={4} className={classes.serversData}>\n                  <DrivesIcon /> <strong>{totalNodes}</strong>\n                  &nbsp;nodes,&nbsp;\n                  <strong>{totalDrives}</strong>&nbsp; drives\n                </Grid>\n                <Grid\n                  item\n                  xs={12}\n                  md={4}\n                  className={classes.minioVersionContainer}\n                >\n                  <span className={classes.versionIcon}>\n                    <VersionIcon />\n                  </span>{\" \"}\n                  MinIO VERSION&nbsp;<strong>{version}</strong>\n                </Grid>\n                <Grid item xs={12} md={4} className={classes.advancedContainer}>\n                  {advancedVisible && (\n                    <button\n                      onClick={() => {\n                        setAdvancedOpen(!advancedOpen);\n                      }}\n                      className={classes.advancedConfiguration}\n                    >\n                      Advanced configurations{\" \"}\n                      <span\n                        className={\n                          advancedOpen\n                            ? classes.advancedOpen\n                            : classes.advancedClosed\n                        }\n                      >\n                        <ArrowForwardIosIcon />\n                      </span>\n                    </button>\n                  )}\n                </Grid>\n              </Fragment>\n            ) : (\n              <Fragment>\n                <Grid item xs={12} className={classes.loaderAlign}>\n                  <CircularProgress size={25} />\n                </Grid>\n              </Fragment>\n            )}\n          </Grid>\n          {advancedContent && (\n            <Grid\n              xs={12}\n              className={`${classes.advancedContent} ${\n                advancedOpen ? \"open\" : \"\"\n              }`}\n            >\n              {advancedContent}\n            </Grid>\n          )}\n        </Grid>\n        {children}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(TestWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  ICloseEvent,\n  IMessageEvent,\n  w3cwebsocket as W3CWebSocket,\n} from \"websocket\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { healthInfoMessageReceived, healthInfoResetMessage } from \"./actions\";\nimport {\n  DiagStatError,\n  DiagStatInProgress,\n  DiagStatSuccess,\n  HealthInfoMessage,\n} from \"./types\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  WSCloseAbnormalClosure,\n  WSCloseInternalServerErr,\n  WSClosePolicyViolation,\n  wsProtocol,\n} from \"../../../utils/wsUtils\";\nimport {\n  actionsTray,\n  containerForHeader,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { Button, Grid } from \"@mui/material\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport { setServerDiagStat, setSnackBarMessage } from \"../../../actions\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport TestWrapper from \"../Common/TestWrapper/TestWrapper\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport HelpBox from \"../../../common/HelpBox\";\nimport WarnIcon from \"../../../icons/WarnIcon\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    loading: {\n      paddingTop: 8,\n      paddingLeft: 40,\n    },\n    buttons: {\n      justifyContent: \"flex-start\",\n      gap: 20,\n    },\n    localMessage: {\n      fontSize: 24,\n      color: \"#07193E\",\n      fontWeight: \"bold\",\n      textAlign: \"center\",\n      marginBottom: 10,\n    },\n    startDiagnostic: {\n      textAlign: \"center\",\n      marginBottom: 25,\n    },\n    progressResult: {\n      textAlign: \"center\",\n      marginBottom: 25,\n    },\n    diagNew: {\n      textAlign: \"right\",\n      margin: 25,\n      marginBottom: 0,\n    },\n    ...actionsTray,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst download = (filename: string, text: string) => {\n  let element = document.createElement(\"a\");\n  element.setAttribute(\n    \"href\",\n    \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text)\n  );\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n};\n\ninterface IHealthInfo {\n  classes: any;\n  healthInfoMessageReceived: typeof healthInfoMessageReceived;\n  healthInfoResetMessage: typeof healthInfoResetMessage;\n  message: HealthInfoMessage;\n  namespace: string;\n  tenant: string;\n  setSnackBarMessage: typeof setSnackBarMessage;\n  setServerDiagStat: typeof setServerDiagStat;\n  serverDiagnosticStatus: string;\n}\n\nconst HealthInfo = ({\n  classes,\n  healthInfoMessageReceived,\n  healthInfoResetMessage,\n  message,\n  setSnackBarMessage,\n  setServerDiagStat,\n  serverDiagnosticStatus,\n}: IHealthInfo) => {\n  const [startDiagnostic, setStartDiagnostic] = useState(false);\n  const [diagStarted, setDiagStarted] = useState<boolean>(false);\n  const [downloadDisabled, setDownloadDisabled] = useState(true);\n  const [localMessage, setMessage] = useState<string>(\"\");\n  const [title, setTitle] = useState<string>(\"New Diagnostic\");\n\n  useEffect(() => {\n    if (serverDiagnosticStatus === DiagStatInProgress) {\n      setTitle(\"Diagnostic in progress...\");\n      return;\n    }\n\n    if (serverDiagnosticStatus === DiagStatSuccess && diagStarted) {\n      setTitle(\"Diagnostic complete\");\n      return;\n    }\n\n    if (serverDiagnosticStatus === DiagStatError) {\n      setTitle(\"Error\");\n      return;\n    }\n  }, [serverDiagnosticStatus, startDiagnostic, diagStarted]);\n\n  useEffect(() => {\n    if (\n      serverDiagnosticStatus === DiagStatSuccess &&\n      message !== ({} as HealthInfoMessage)\n    ) {\n      // Allow download of diagnostics file only when\n      // it succeded fetching all the results and info is not empty.\n      setDownloadDisabled(false);\n    }\n    if (serverDiagnosticStatus === DiagStatInProgress) {\n      // Disable Start Diagnotic and Disable Download buttons\n      // if a Diagnosis is in progress.\n      setDownloadDisabled(true);\n    }\n    setStartDiagnostic(false);\n  }, [serverDiagnosticStatus, message]);\n\n  useEffect(() => {\n    if (startDiagnostic) {\n      healthInfoResetMessage();\n      const url = new URL(window.location.toString());\n      const isDev = process.env.NODE_ENV === \"development\";\n      const port = isDev ? \"9090\" : url.port;\n\n      const wsProt = wsProtocol(url.protocol);\n\n      const c = new W3CWebSocket(\n        `${wsProt}://${url.hostname}:${port}/ws/health-info?deadline=1h`\n      );\n\n      let interval: any | null = null;\n      if (c !== null) {\n        c.onopen = () => {\n          console.log(\"WebSocket Client Connected\");\n          c.send(\"ok\");\n          interval = setInterval(() => {\n            c.send(\"ok\");\n          }, 10 * 1000);\n          setDiagStarted(true);\n          setMessage(\n            \"Diagnostic started. Please do not refresh page during diagnosis.\"\n          );\n          setServerDiagStat(DiagStatInProgress);\n        };\n        c.onmessage = (message: IMessageEvent) => {\n          let m: HealthInfoMessage = JSON.parse(message.data.toString());\n          m.timestamp = new Date(m.timestamp.toString());\n\n          healthInfoMessageReceived(m);\n        };\n        c.onerror = (error: Error) => {\n          console.log(\"error closing websocket:\", error.message);\n          c.close(1000);\n          clearInterval(interval);\n          setServerDiagStat(DiagStatError);\n        };\n        c.onclose = (event: ICloseEvent) => {\n          clearInterval(interval);\n          if (\n            event.code === WSCloseInternalServerErr ||\n            event.code === WSClosePolicyViolation ||\n            event.code === WSCloseAbnormalClosure\n          ) {\n            // handle close with error\n            console.log(\"connection closed by server with code:\", event.code);\n            setMessage(\"An error occurred while getting Diagnostic file.\");\n            setServerDiagStat(DiagStatError);\n          } else {\n            console.log(\"connection closed by server\");\n\n            setMessage(\"Diagnostic file is ready to be downloaded.\");\n            setServerDiagStat(DiagStatSuccess);\n          }\n        };\n      }\n    } else {\n      // reset start status\n      setStartDiagnostic(false);\n    }\n  }, [\n    healthInfoMessageReceived,\n    healthInfoResetMessage,\n    startDiagnostic,\n    setSnackBarMessage,\n    setServerDiagStat,\n  ]);\n\n  return (\n    <Fragment>\n      <PageHeader label=\"Health\" />\n      <PageLayout>\n        <Grid item xs={12} className={classes.boxy}>\n          <TestWrapper title={title} advancedVisible={false}>\n            <Grid container className={classes.buttons}>\n              {!diagStarted && (\n                <Grid\n                  key=\"start-diag\"\n                  item\n                  xs={12}\n                  className={classes.startDiagnostic}\n                >\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={startDiagnostic}\n                    onClick={() => setStartDiagnostic(true)}\n                  >\n                    Start Diagnostic\n                  </Button>\n                </Grid>\n              )}\n              {diagStarted && (\n                <Grid\n                  key=\"start-download\"\n                  item\n                  xs={12}\n                  className={classes.progressResult}\n                >\n                  <div className={classes.localMessage}>{localMessage}</div>\n                  {serverDiagnosticStatus === DiagStatInProgress ? (\n                    <div className={classes.loading}>\n                      <CircularProgress size={25} />\n                    </div>\n                  ) : (\n                    <Fragment>\n                      {serverDiagnosticStatus !== DiagStatError && (\n                        <Button\n                          type=\"submit\"\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            download(\n                              \"diagnostic.json\",\n                              JSON.stringify(message, null, 2)\n                            );\n                          }}\n                          disabled={downloadDisabled}\n                        >\n                          Download\n                        </Button>\n                      )}\n                      <Grid item xs={12} className={classes.diagNew}>\n                        <Button\n                          id=\"start-new-diagnostic\"\n                          type=\"submit\"\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={startDiagnostic}\n                          onClick={() => setStartDiagnostic(true)}\n                        >\n                          Start New Diagnostic\n                        </Button>\n                      </Grid>\n                    </Fragment>\n                  )}\n                </Grid>\n              )}\n            </Grid>\n          </TestWrapper>\n        </Grid>\n        {!diagStarted && (\n          <Fragment>\n            <br />\n            <HelpBox\n              title={\n                \"During the health diagnostics run all production traffic will be suspended.\"\n              }\n              iconComponent={<WarnIcon />}\n              help={<Fragment />}\n            />\n          </Fragment>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  message: state.healthInfo.message,\n  serverDiagnosticStatus: state.system.serverDiagnosticStatus,\n});\n\nconst connector = connect(mapState, {\n  healthInfoMessageReceived: healthInfoMessageReceived,\n  healthInfoResetMessage: healthInfoResetMessage,\n  setSnackBarMessage,\n  setServerDiagStat,\n});\n\nexport default connector(withStyles(styles)(HealthInfo));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// Close codes for websockets defined in RFC 6455\nexport const WSCloseNormalClosure = 1000;\nexport const WSCloseCloseGoingAway = 1001;\nexport const WSCloseAbnormalClosure = 1006;\nexport const WSClosePolicyViolation = 1008;\nexport const WSCloseInternalServerErr = 1011;\n\nexport const wsProtocol = (protocol: string): string => {\n  let wsProtocol = \"ws\";\n  if (protocol === \"https:\") {\n    wsProtocol = \"wss\";\n  }\n  return wsProtocol;\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6.23 20.23 8 22l10-10L8 2 6.23 3.77 14.46 12z\"\n}), 'ArrowForwardIos');\n\nexports.default = _default;","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","pageContentStyles","children","contentSpacer","mapDispatchToProps","toggleList","connector","connect","state","sidebarOpen","system","operatorMode","managerObjects","objectBrowser","objectManager","objectsToManage","headerContainer","minHeight","left","boxShadow","label","justifyContent","labelStyle","color","marginLeft","marginTop","rightMenu","textAlign","logo","fill","palette","primary","main","middleComponent","actions","direction","sm","md","sx","variant","length","component","onClick","size","DiagStatError","DiagStatSuccess","DiagStatInProgress","titleBar","borderBottom","padding","divisorContainer","serversData","minioVersionContainer","alignSelf","versionIcon","loaderAlign","advancedContainer","optionsContainer","advancedConfiguration","textDecoration","cursor","advancedOpen","transform","advancedClosed","advancedContent","maxHeight","transitionDuration","overflow","advancedVisible","useState","version","setVersion","totalNodes","setTotalNodes","totalDrives","setTotalDrives","loading","setLoading","setAdvancedOpen","useEffect","api","then","res","totalServers","servers","reduce","prevTotal","currentElement","drives","catch","err","Grid","Fragment","CircularProgress","ArrowForwardIos","message","healthInfo","serverDiagnosticStatus","healthInfoMessageReceived","healthInfoResetMessage","setSnackBarMessage","setServerDiagStat","buttons","gap","localMessage","startDiagnostic","progressResult","diagNew","margin","actionsTray","containerForHeader","spacing","setStartDiagnostic","diagStarted","setDiagStarted","downloadDisabled","setDownloadDisabled","setMessage","setTitle","url","URL","window","location","toString","port","wsProt","wsProtocol","protocol","c","W3CWebSocket","hostname","interval","onopen","console","log","send","setInterval","onmessage","m","JSON","parse","data","timestamp","Date","onerror","error","close","clearInterval","onclose","event","code","WSCloseInternalServerErr","WSClosePolicyViolation","WSCloseAbnormalClosure","PageHeader","PageLayout","boxy","Button","type","disabled","filename","text","element","document","createElement","setAttribute","encodeURIComponent","style","body","appendChild","click","removeChild","download","stringify","id","HelpBox","WarnIcon","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","naiveFallback","self","Error","module","this","globalThis","Object","defineProperty","prototype","get","configurable","__global__","_globalThis","NativeWebSocket","WebSocket","MozWebSocket","websocket_version","uri","protocols","forEach","prop"],"sourceRoot":""}