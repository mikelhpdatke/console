{"version":3,"file":"static/js/5193.291a641b.chunk.js","mappings":"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","sources":["screens/Console/Common/PageHeader/PageHeader.tsx","screens/Console/Dashboard/Dashboard.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { AppState } from \"../../../../store\";\nimport OperatorLogo from \"../../../../icons/OperatorLogo\";\nimport ConsoleLogo from \"../../../../icons/ConsoleLogo\";\nimport { IFileItem } from \"../../ObjectBrowser/reducers\";\nimport { toggleList } from \"../../ObjectBrowser/actions\";\nimport { ObjectManagerIcon } from \"../../../../icons\";\n\ninterface IPageHeader {\n  classes: any;\n  sidebarOpen?: boolean;\n  operatorMode?: boolean;\n  label: any;\n  actions?: any;\n  managerObjects?: IFileItem[];\n  toggleList: typeof toggleList;\n  middleComponent?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      width: \"100%\",\n      minHeight: 79,\n      display: \"flex\",\n      backgroundColor: \"#fff\",\n      left: 0,\n      boxShadow: \"rgba(0,0,0,.08) 0 3px 10px\",\n    },\n    label: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n    },\n    labelStyle: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 700,\n      marginLeft: 34,\n      marginTop: 8,\n    },\n    rightMenu: {\n      textAlign: \"right\",\n    },\n    logo: {\n      marginLeft: 34,\n      fill: theme.palette.primary.main,\n      \"& .min-icon\": {\n        width: 120,\n      },\n    },\n    middleComponent: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  });\n\nconst PageHeader = ({\n  classes,\n  label,\n  actions,\n  sidebarOpen,\n  operatorMode,\n  managerObjects,\n  toggleList,\n  middleComponent,\n}: IPageHeader) => {\n  return (\n    <Grid\n      container\n      className={`${classes.headerContainer} page-header`}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Grid\n        item\n        xs={12}\n        sm={12}\n        md={middleComponent ? 3 : 6}\n        className={classes.label}\n        sx={{\n          paddingTop: [\"15px\", \"15px\", \"0\", \"0\"],\n        }}\n      >\n        {!sidebarOpen && (\n          <div className={classes.logo}>\n            {operatorMode ? <OperatorLogo /> : <ConsoleLogo />}\n          </div>\n        )}\n        <Typography variant=\"h4\" className={classes.labelStyle}>\n          {label}\n        </Typography>\n      </Grid>\n      {middleComponent && (\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={6}\n          className={classes.middleComponent}\n          sx={{ marginTop: [\"10px\", \"10px\", \"0\", \"0\"] }}\n        >\n          {middleComponent}\n        </Grid>\n      )}\n      <Grid\n        item\n        xs={12}\n        sm={12}\n        md={middleComponent ? 3 : 6}\n        className={classes.rightMenu}\n      >\n        {actions && actions}\n        {managerObjects && managerObjects.length > 0 && (\n          <IconButton\n            color=\"primary\"\n            aria-label=\"Refresh List\"\n            component=\"span\"\n            onClick={() => {\n              toggleList();\n            }}\n            size=\"large\"\n          >\n            <ObjectManagerIcon />\n          </IconButton>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  sidebarOpen: state.system.sidebarOpen,\n  operatorMode: state.system.operatorMode,\n  managerObjects: state.objectBrowser.objectManager.objectsToManage,\n});\n\nconst mapDispatchToProps = {\n  toggleList,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(PageHeader));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport PrDashboard from \"./Prometheus/PrDashboard\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport Grid from \"@mui/material/Grid\";\nimport { containerForHeader } from \"../Common/FormComponents/common/styleLibrary\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport api from \"../../../common/api\";\nimport { Usage } from \"./types\";\nimport { setErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport BasicDashboard from \"./BasicDashboard/BasicDashboard\";\n\ninterface IDashboardSimple {\n  classes: any;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst Dashboard = ({ classes, displayErrorMessage }: IDashboardSimple) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [basicResult, setBasicResult] = useState<Usage | null>(null);\n\n  const fetchUsage = useCallback(() => {\n    api\n      .invoke(\"GET\", `/api/v1/admin/info`)\n      .then((res: Usage) => {\n        setBasicResult(res);\n        setLoading(false);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        displayErrorMessage(err);\n        setLoading(false);\n      });\n  }, [setBasicResult, setLoading, displayErrorMessage]);\n\n  useEffect(() => {\n    if (loading) {\n      fetchUsage();\n    }\n  }, [loading, fetchUsage]);\n\n  const widgets = get(basicResult, \"widgets\", null);\n\n  return (\n    <Fragment>\n      <PageHeader label=\"Metrics\" />\n      {loading ? (\n        <Grid container>\n          <Grid item xs={12} className={classes.container}>\n            <LinearProgress />\n          </Grid>\n        </Grid>\n      ) : (\n        <Fragment>\n          {widgets !== null ? (\n            <Grid container className={classes.container}>\n              <PrDashboard />\n            </Grid>\n          ) : (\n            <BasicDashboard usage={basicResult} />\n          )}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nconst connector = connect(null, {\n  displayErrorMessage: setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(Dashboard));\n"],"names":["mapDispatchToProps","toggleList","connector","connect","state","sidebarOpen","system","operatorMode","managerObjects","objectBrowser","objectManager","objectsToManage","withStyles","theme","createStyles","headerContainer","width","minHeight","display","backgroundColor","left","boxShadow","label","justifyContent","alignItems","labelStyle","color","fontSize","fontWeight","marginLeft","marginTop","rightMenu","textAlign","logo","fill","palette","primary","main","middleComponent","classes","actions","container","className","direction","item","xs","sm","md","sx","paddingTop","variant","length","component","onClick","size","displayErrorMessage","setErrorSnackMessage","containerForHeader","spacing","useState","loading","setLoading","basicResult","setBasicResult","fetchUsage","useCallback","api","then","res","catch","err","useEffect","widgets","get","Fragment","usage"],"sourceRoot":""}