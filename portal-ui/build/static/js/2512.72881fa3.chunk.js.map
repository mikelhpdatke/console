{"version":3,"file":"static/js/2512.72881fa3.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/EditReplicationModal.tsx","screens/Console/Buckets/BucketDetails/BucketReplicationPanel.tsx","screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","screens/Console/Common/PanelTitle/PanelTitle.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Button } from \"@mui/material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport { BucketReplicationIcon } from \"../../../../icons\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { BucketReplicationRule } from \"../types\";\nimport { connect } from \"react-redux\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport PredefinedList from \"../../Common/FormComponents/PredefinedList/PredefinedList\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\n\ninterface IEditReplicationModal {\n  closeModalAndRefresh: (refresh: boolean) => void;\n  open: boolean;\n  classes: any;\n  bucketName: string;\n  ruleID: string;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    multiContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    sizeFactorContainer: {\n      \"& label\": {\n        display: \"none\",\n      },\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    ...spacingUtils,\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalStyleUtils,\n    modalFormScrollable: {\n      ...modalStyleUtils.modalFormScrollable,\n      paddingRight: 10,\n    },\n  });\n\nconst EditReplicationModal = ({\n  closeModalAndRefresh,\n  open,\n  classes,\n  bucketName,\n  ruleID,\n  setModalErrorSnackMessage,\n}: IEditReplicationModal) => {\n  const [editLoading, setEditLoading] = useState<boolean>(true);\n  const [saveEdit, setSaveEdit] = useState<boolean>(false);\n  const [priority, setPriority] = useState<string>(\"1\");\n  const [destination, setDestination] = useState<string>(\"\");\n  const [prefix, setPrefix] = useState<string>(\"\");\n  const [repDeleteMarker, setRepDeleteMarker] = useState<boolean>(false);\n  const [metadataSync, setMetadataSync] = useState<boolean>(false);\n  const [initialTags, setInitialTags] = useState<string>(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [targetStorageClass, setTargetStorageClass] = useState<string>(\"\");\n  const [repExisting, setRepExisting] = useState<boolean>(false);\n  const [repDelete, setRepDelete] = useState<boolean>(false);\n  const [ruleState, setRuleState] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (editLoading) {\n      api\n        .invoke(\"GET\", `/api/v1/buckets/${bucketName}/replication/${ruleID}`)\n        .then((res: BucketReplicationRule) => {\n          setPriority(res.priority.toString());\n          const pref = res.prefix || \"\";\n          const tag = res.tags || \"\";\n          setPrefix(pref);\n          setInitialTags(tag);\n          setTags(tag);\n          setDestination(res.destination.bucket);\n          setRepDeleteMarker(res.delete_marker_replication);\n          setTargetStorageClass(res.storageClass || \"\");\n          setRepExisting(!!res.existingObjects);\n          setRepDelete(!!res.deletes_replication);\n          setRuleState(res.status === \"Enabled\");\n          setMetadataSync(!!res.metadata_replication);\n\n          setEditLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setModalErrorSnackMessage(err);\n          setEditLoading(false);\n        });\n    }\n  }, [editLoading, setModalErrorSnackMessage, bucketName, ruleID]);\n\n  useEffect(() => {\n    if (saveEdit) {\n      const remoteBucketsInfo = {\n        arn: destination,\n        ruleState: ruleState,\n        prefix: prefix,\n        tags: tags,\n        replicateDeleteMarkers: repDeleteMarker,\n        replicateDeletes: repDelete,\n        replicateExistingObjects: repExisting,\n        replicateMetadata: metadataSync,\n        priority: parseInt(priority),\n        storageClass: targetStorageClass,\n      };\n\n      api\n        .invoke(\n          \"PUT\",\n          `/api/v1/buckets/${bucketName}/replication/${ruleID}`,\n          remoteBucketsInfo\n        )\n        .then(() => {\n          setSaveEdit(false);\n          closeModalAndRefresh(true);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setModalErrorSnackMessage(err);\n          setSaveEdit(false);\n        });\n    }\n  }, [\n    saveEdit,\n    bucketName,\n    ruleID,\n    destination,\n    prefix,\n    tags,\n    repDeleteMarker,\n    priority,\n    repDelete,\n    repExisting,\n    ruleState,\n    metadataSync,\n    targetStorageClass,\n    closeModalAndRefresh,\n    setModalErrorSnackMessage,\n  ]);\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title=\"Edit Bucket Replication\"\n      titleIcon={<BucketReplicationIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          setSaveEdit(true);\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.modalFormScrollable}>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <FormSwitchWrapper\n                checked={ruleState}\n                id=\"ruleState\"\n                name=\"ruleState\"\n                label=\"Rule State\"\n                onChange={(e) => {\n                  setRuleState(e.target.checked);\n                }}\n                value={ruleState}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <PredefinedList label={\"Destination\"} content={destination} />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"priority\"\n                name=\"priority\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  if (e.target.validity.valid) {\n                    setPriority(e.target.value);\n                  }\n                }}\n                label=\"Priority\"\n                value={priority}\n                pattern={\"[0-9]*\"}\n              />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              className={`${classes.spacerTop} ${classes.formFieldRow}`}\n            >\n              <InputBoxWrapper\n                id=\"storageClass\"\n                name=\"storageClass\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setTargetStorageClass(e.target.value);\n                }}\n                placeholder=\"STANDARD_IA,REDUCED_REDUNDANCY etc\"\n                label=\"Storage Class\"\n                value={targetStorageClass}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <fieldset className={classes.fieldGroup}>\n                <legend className={classes.descriptionText}>\n                  Object Filters\n                </legend>\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <InputBoxWrapper\n                    id=\"prefix\"\n                    name=\"prefix\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setPrefix(e.target.value);\n                    }}\n                    placeholder=\"prefix\"\n                    label=\"Prefix\"\n                    value={prefix}\n                  />\n                </Grid>\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <QueryMultiSelector\n                    name=\"tags\"\n                    label=\"Tags\"\n                    elements={initialTags}\n                    onChange={(vl: string) => {\n                      setTags(vl);\n                    }}\n                    keyPlaceholder=\"Tag Key\"\n                    valuePlaceholder=\"Tag Value\"\n                    withBorder\n                  />\n                </Grid>\n              </fieldset>\n            </Grid>\n            <Grid item xs={12}>\n              <fieldset className={classes.fieldGroup}>\n                <legend className={classes.descriptionText}>\n                  Replication Options\n                </legend>\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <FormSwitchWrapper\n                    checked={repExisting}\n                    id=\"repExisting\"\n                    name=\"repExisting\"\n                    label=\"Existing Objects\"\n                    onChange={(e) => {\n                      setRepExisting(e.target.checked);\n                    }}\n                    value={repExisting}\n                    description={\"Replicate existing objects\"}\n                  />\n                </Grid>\n                <FormSwitchWrapper\n                  checked={metadataSync}\n                  id=\"metadatataSync\"\n                  name=\"metadatataSync\"\n                  label=\"Metadata Sync\"\n                  onChange={(e) => {\n                    setMetadataSync(e.target.checked);\n                  }}\n                  value={metadataSync}\n                  description={\"Metadata Sync\"}\n                />\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <FormSwitchWrapper\n                    checked={repDeleteMarker}\n                    id=\"deleteMarker\"\n                    name=\"deleteMarker\"\n                    label=\"Delete Marker\"\n                    onChange={(e) => {\n                      setRepDeleteMarker(e.target.checked);\n                    }}\n                    value={repDeleteMarker}\n                    description={\"Replicate soft deletes\"}\n                  />\n                </Grid>\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <FormSwitchWrapper\n                    checked={repDelete}\n                    id=\"repDelete\"\n                    name=\"repDelete\"\n                    label=\"Deletes\"\n                    onChange={(e) => {\n                      setRepDelete(e.target.checked);\n                    }}\n                    value={repDelete}\n                    description={\"Replicate versioned deletes\"}\n                  />\n                </Grid>\n              </fieldset>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              type=\"button\"\n              variant=\"outlined\"\n              color=\"primary\"\n              disabled={editLoading || saveEdit}\n              onClick={() => {\n                closeModalAndRefresh(false);\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={editLoading || saveEdit}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(EditReplicationModal));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport {\n  actionsTray,\n  searchField,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport {\n  BucketInfo,\n  BucketReplication,\n  BucketReplicationDestination,\n  BucketReplicationRule,\n} from \"../types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { AppState } from \"../../../../store\";\nimport {\n  SecureComponent,\n  hasPermission,\n} from \"../../../../common/SecureComponent\";\nimport { IAM_SCOPES } from \"../../../../common/SecureComponent/permissions\";\nimport { AddIcon, DeleteIcon, BucketsIcon } from \"../../../../icons\";\nimport api from \"../../../../common/api\";\nimport TableWrapper from \"../../Common/TableWrapper/TableWrapper\";\nimport HelpBox from \"../../../../common/HelpBox\";\nimport PanelTitle from \"../../Common/PanelTitle/PanelTitle\";\nimport withSuspense from \"../../Common/Components/withSuspense\";\nimport RBIconButton from \"./SummaryItems/RBIconButton\";\nimport EditReplicationModal from \"./EditReplicationModal\";\n\nconst AddReplicationModal = withSuspense(\n  React.lazy(() => import(\"./AddReplicationModal\"))\n);\nconst DeleteReplicationRule = withSuspense(\n  React.lazy(() => import(\"./DeleteReplicationRule\"))\n);\n\ninterface IBucketReplicationProps {\n  classes: any;\n  match: any;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  loadingBucket: boolean;\n  bucketInfo: BucketInfo | null;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...searchField,\n    ...actionsTray,\n    twHeight: {\n      minHeight: 400,\n    },\n  });\n\nconst BucketReplicationPanel = ({\n  classes,\n  match,\n  setErrorSnackMessage,\n  loadingBucket,\n}: IBucketReplicationProps) => {\n  const [loadingReplication, setLoadingReplication] = useState<boolean>(true);\n  const [replicationRules, setReplicationRules] = useState<\n    BucketReplicationRule[]\n  >([]);\n  const [deleteReplicationModal, setDeleteReplicationModal] =\n    useState<boolean>(false);\n  const [openSetReplication, setOpenSetReplication] = useState<boolean>(false);\n  const [editReplicationModal, setEditReplicationModal] =\n    useState<boolean>(false);\n  const [selectedRRule, setSelectedRRule] = useState<string>(\"\");\n  const [deleteAllRules, setDeleteAllRules] = useState<boolean>(false);\n\n  const bucketName = match.params[\"bucketName\"];\n\n  const displayReplicationRules = hasPermission(bucketName, [\n    IAM_SCOPES.S3_GET_REPLICATION_CONFIGURATION,\n  ]);\n\n  useEffect(() => {\n    if (loadingBucket) {\n      setLoadingReplication(true);\n    }\n  }, [loadingBucket, setLoadingReplication]);\n\n  useEffect(() => {\n    if (loadingReplication) {\n      if (displayReplicationRules) {\n        api\n          .invoke(\"GET\", `/api/v1/buckets/${bucketName}/replication`)\n          .then((res: BucketReplication) => {\n            const r = res.rules ? res.rules : [];\n\n            r.sort((a, b) => a.priority - b.priority);\n\n            setReplicationRules(r);\n            setLoadingReplication(false);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setErrorSnackMessage(err);\n            setLoadingReplication(false);\n          });\n      } else {\n        setLoadingReplication(false);\n      }\n    }\n  }, [\n    loadingReplication,\n    setErrorSnackMessage,\n    bucketName,\n    displayReplicationRules,\n  ]);\n\n  const closeAddReplication = () => {\n    setOpenReplicationOpen(false);\n    setLoadingReplication(true);\n  };\n\n  const setOpenReplicationOpen = (open = false) => {\n    setOpenSetReplication(open);\n  };\n\n  const closeReplicationModalDelete = (refresh: boolean) => {\n    setDeleteReplicationModal(false);\n\n    if (refresh) {\n      setLoadingReplication(true);\n    }\n  };\n\n  const closeEditReplication = (refresh: boolean) => {\n    setEditReplicationModal(false);\n\n    if (refresh) {\n      setLoadingReplication(true);\n    }\n  };\n\n  const confirmDeleteReplication = (replication: BucketReplicationRule) => {\n    setSelectedRRule(replication.id);\n    setDeleteAllRules(false);\n    setDeleteReplicationModal(true);\n  };\n\n  const confirmDeleteAllReplicationRules = () => {\n    setSelectedRRule(\"allRules\");\n    setDeleteAllRules(true);\n    setDeleteReplicationModal(true);\n  };\n\n  const editReplicationRule = (replication: BucketReplicationRule) => {\n    setSelectedRRule(replication.id);\n    setEditReplicationModal(true);\n  };\n\n  const ruleDestDisplay = (events: BucketReplicationDestination) => {\n    return <Fragment>{events.bucket.replace(\"arn:aws:s3:::\", \"\")}</Fragment>;\n  };\n\n  const tagDisplay = (events: BucketReplicationRule) => {\n    return <Fragment>{events && events.tags !== \"\" ? \"Yes\" : \"No\"}</Fragment>;\n  };\n\n  const replicationTableActions: any = [\n    {\n      type: \"delete\",\n      onClick: confirmDeleteReplication,\n    },\n    {\n      type: \"view\",\n      onClick: editReplicationRule,\n      disableButtonFunction: !hasPermission(\n        bucketName,\n        [IAM_SCOPES.S3_PUT_REPLICATION_CONFIGURATION],\n        true\n      ),\n    },\n  ];\n\n  return (\n    <Fragment>\n      {openSetReplication && (\n        <AddReplicationModal\n          closeModalAndRefresh={closeAddReplication}\n          open={openSetReplication}\n          bucketName={bucketName}\n          setReplicationRules={replicationRules}\n        />\n      )}\n\n      {deleteReplicationModal && (\n        <DeleteReplicationRule\n          deleteOpen={deleteReplicationModal}\n          selectedBucket={bucketName}\n          closeDeleteModalAndRefresh={closeReplicationModalDelete}\n          ruleToDelete={selectedRRule}\n          remainingRules={replicationRules.length}\n          deleteAllRules={deleteAllRules}\n        />\n      )}\n\n      {editReplicationModal && (\n        <EditReplicationModal\n          closeModalAndRefresh={closeEditReplication}\n          open={editReplicationModal}\n          bucketName={bucketName}\n          ruleID={selectedRRule}\n        />\n      )}\n      <Grid container>\n        <Grid item xs={12} className={classes.actionsTray}>\n          <PanelTitle>Replication</PanelTitle>\n          <div>\n            <SecureComponent\n              scopes={[IAM_SCOPES.S3_PUT_REPLICATION_CONFIGURATION]}\n              resource={bucketName}\n              matchAll\n              errorProps={{ disabled: true }}\n            >\n              <RBIconButton\n                tooltip={\"Remove All Replication Rules\"}\n                onClick={() => {\n                  confirmDeleteAllReplicationRules();\n                }}\n                text={\"Remove All Rules\"}\n                icon={<DeleteIcon />}\n                color={\"secondary\"}\n                variant={\"outlined\"}\n                disabled={replicationRules.length === 0}\n              />\n            </SecureComponent>\n            <SecureComponent\n              scopes={[IAM_SCOPES.S3_PUT_REPLICATION_CONFIGURATION]}\n              resource={bucketName}\n              matchAll\n              errorProps={{ disabled: true }}\n            >\n              <RBIconButton\n                tooltip={\"Add Replication Rule\"}\n                onClick={() => {\n                  setOpenReplicationOpen(true);\n                }}\n                text={\"Add Replication Rule\"}\n                icon={<AddIcon />}\n                color=\"primary\"\n                variant={\"contained\"}\n              />\n            </SecureComponent>\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          <SecureComponent\n            scopes={[IAM_SCOPES.S3_GET_REPLICATION_CONFIGURATION]}\n            resource={bucketName}\n            errorProps={{ disabled: true }}\n          >\n            <TableWrapper\n              itemActions={replicationTableActions}\n              columns={[\n                {\n                  label: \"Priority\",\n                  elementKey: \"priority\",\n                  width: 55,\n                  contentTextAlign: \"center\",\n                },\n                {\n                  label: \"Destination\",\n                  elementKey: \"destination\",\n                  renderFunction: ruleDestDisplay,\n                },\n                {\n                  label: \"Prefix\",\n                  elementKey: \"prefix\",\n                  width: 200,\n                },\n                {\n                  label: \"Tags\",\n                  elementKey: \"tags\",\n                  renderFunction: tagDisplay,\n                  width: 60,\n                },\n                { label: \"Status\", elementKey: \"status\", width: 100 },\n              ]}\n              isLoading={loadingReplication}\n              records={replicationRules}\n              entityName=\"Replication Rules\"\n              idField=\"id\"\n              customPaperHeight={classes.twHeight}\n              textSelectable\n            />\n          </SecureComponent>\n        </Grid>\n        <Grid item xs={12}>\n          <br />\n          <HelpBox\n            title={\"Replication\"}\n            iconComponent={<BucketsIcon />}\n            help={\n              <Fragment>\n                MinIO supports server-side and client-side replication of\n                objects between source and destination buckets.\n                <br />\n                <br />\n                You can learn more at our{\" \"}\n                <a\n                  href=\"https://docs.min.io/minio/baremetal/replication/replication-overview.html?ref=con\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  documentation\n                </a>\n                .\n              </Fragment>\n            }\n          />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  session: state.console.session,\n  loadingBucket: state.buckets.bucketDetails.loadingBucket,\n  bucketInfo: state.buckets.bucketDetails.bucketInfo,\n});\n\nconst connector = connect(mapState, {\n  setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(BucketReplicationPanel));\n","import React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { predefinedList } from \"../common/styleLibrary\";\n\ninterface IPredefinedList {\n  classes: any;\n  label?: string;\n  content: any;\n  multiLine?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...predefinedList,\n  });\n\nconst PredefinedList = ({\n  classes,\n  label = \"\",\n  content,\n  multiLine = false,\n}: IPredefinedList) => {\n  return (\n    <Fragment>\n      <Grid className={classes.prefinedContainer}>\n        {label !== \"\" && (\n          <Grid item xs={12} className={classes.predefinedTitle}>\n            {label}\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.predefinedList}>\n          <Grid\n            item\n            xs={12}\n            className={\n              multiLine ? classes.innerContentMultiline : classes.innerContent\n            }\n          >\n            {content}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PredefinedList);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      fontSize: \".9rem\",\n    },\n  });\n\ninterface IPanelTitle extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst PanelTitle = ({ classes, children }: IPanelTitle) => {\n  return <h1 className={classes.root}>{children}</h1>;\n};\n\nexport default withStyles(styles)(PanelTitle);\n"],"names":["connector","connect","setModalErrorSnackMessage","withStyles","theme","createStyles","buttonContainer","textAlign","multiContainer","display","alignItems","sizeFactorContainer","marginBottom","spacingUtils","createTenantCommon","formFieldStyles","modalStyleUtils","modalFormScrollable","paddingRight","closeModalAndRefresh","open","classes","bucketName","ruleID","useState","editLoading","setEditLoading","saveEdit","setSaveEdit","priority","setPriority","destination","setDestination","prefix","setPrefix","repDeleteMarker","setRepDeleteMarker","metadataSync","setMetadataSync","initialTags","setInitialTags","tags","setTags","targetStorageClass","setTargetStorageClass","repExisting","setRepExisting","repDelete","setRepDelete","ruleState","setRuleState","useEffect","api","then","res","toString","pref","tag","bucket","delete_marker_replication","storageClass","existingObjects","deletes_replication","status","metadata_replication","catch","err","remoteBucketsInfo","arn","replicateDeleteMarkers","replicateDeletes","replicateExistingObjects","replicateMetadata","parseInt","ModalWrapper","modalOpen","onClose","title","titleIcon","noValidate","autoComplete","onSubmit","e","preventDefault","Grid","container","item","xs","className","formFieldRow","FormSwitchWrapper","checked","id","name","label","onChange","target","value","PredefinedList","content","InputBoxWrapper","validity","valid","pattern","spacerTop","placeholder","fieldGroup","descriptionText","QueryMultiSelector","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","description","modalButtonBar","Button","type","variant","color","disabled","onClick","AddReplicationModal","withSuspense","React","DeleteReplicationRule","state","session","console","loadingBucket","buckets","bucketDetails","bucketInfo","setErrorSnackMessage","searchField","actionsTray","twHeight","minHeight","match","loadingReplication","setLoadingReplication","replicationRules","setReplicationRules","deleteReplicationModal","setDeleteReplicationModal","openSetReplication","setOpenSetReplication","editReplicationModal","setEditReplicationModal","selectedRRule","setSelectedRRule","deleteAllRules","setDeleteAllRules","params","displayReplicationRules","hasPermission","IAM_SCOPES","r","rules","sort","a","b","setOpenReplicationOpen","replicationTableActions","replication","disableButtonFunction","Fragment","deleteOpen","selectedBucket","closeDeleteModalAndRefresh","refresh","ruleToDelete","remainingRules","length","PanelTitle","SecureComponent","scopes","resource","matchAll","errorProps","RBIconButton","tooltip","text","icon","TableWrapper","itemActions","columns","elementKey","width","contentTextAlign","renderFunction","events","replace","isLoading","records","entityName","idField","customPaperHeight","textSelectable","HelpBox","iconComponent","help","href","rel","predefinedList","multiLine","prefinedContainer","predefinedTitle","innerContentMultiline","innerContent","root","padding","margin","fontSize","children"],"sourceRoot":""}