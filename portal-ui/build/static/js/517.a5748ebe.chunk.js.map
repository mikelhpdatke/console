{"version":3,"file":"static/js/517.a5748ebe.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector.tsx","screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid #E2E2E2\",\n      borderRadius: 2,\n      backgroundColor: \"#FBFAFA\",\n      paddingLeft: 25,\n      paddingTop: 31,\n      paddingBottom: 21,\n      paddingRight: 30,\n    },\n    leftItems: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 15,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& .min-icon\": {\n        marginRight: 15,\n        height: 28,\n        width: 38,\n      },\n    },\n    helpText: {\n      fontSize: 16,\n      paddingLeft: 5,\n    },\n  });\n\ninterface IHelpBox {\n  classes: any;\n  iconComponent: any;\n  title: string;\n  help: any;\n}\n\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} className={classes.leftItems}>\n          {iconComponent}\n          {title}\n        </Grid>\n        <Grid item xs={12} className={classes.helpText}>\n          {help}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HelpBox);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid item xs={12} sm={4} md={3}>\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport HelpIcon from \"@mui/icons-material/Help\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport InputBoxWrapper from \"../InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"../../../../../icons/AddIcon\";\n\ninterface IQueryMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  keyPlaceholder?: string;\n  valuePlaceholder?: string;\n  classes: any;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputWithBorder: {\n      border: \"1px solid #EAEAEA\",\n      padding: 15,\n      height: 150,\n      overflowY: \"auto\",\n      position: \"relative\",\n      marginTop: 15,\n    },\n    lineInputBoxes: {\n      display: \"flex\",\n      marginBottom: 10,\n    },\n    queryDiv: {\n      alignSelf: \"center\",\n      margin: \"0 4px\",\n      fontWeight: 600,\n    },\n  });\n\nconst QueryMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  keyPlaceholder = \"\",\n  valuePlaceholder = \"\",\n  onChange,\n  withBorder = false,\n  classes,\n}: IQueryMultiSelector) => {\n  const [currentKeys, setCurrentKeys] = useState<string[]>([\"\"]);\n  const [currentValues, setCurrentValues] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentKeys.length === 1 &&\n      currentKeys[0] === \"\" &&\n      currentValues.length === 1 &&\n      currentValues[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\"&\");\n      let keys = [];\n      let values = [];\n\n      elementsSplit.forEach((element: string) => {\n        const splittedVals = element.split(\"=\");\n        if (splittedVals.length === 2) {\n          keys.push(splittedVals[0]);\n          values.push(splittedVals[1]);\n        }\n      });\n\n      keys.push(\"\");\n      values.push(\"\");\n\n      setCurrentKeys(keys);\n      setCurrentValues(values);\n    }\n  }, [currentKeys, currentValues, elements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    const refScroll = bottomList.current;\n    if (refScroll && currentKeys.length > 1) {\n      refScroll.scrollIntoView(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys, currentValues]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = () => {\n    if (\n      currentKeys[currentKeys.length - 1].trim() !== \"\" &&\n      currentValues[currentValues.length - 1].trim() !== \"\"\n    ) {\n      const keysList = [...currentKeys];\n      const valuesList = [...currentValues];\n\n      keysList.push(\"\");\n      valuesList.push(\"\");\n\n      setCurrentKeys(keysList);\n      setCurrentValues(valuesList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeKey = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentKeys];\n    const index = get(e.target, \"dataset.index\", 0);\n    updatedElement[index] = e.target.value;\n\n    setCurrentKeys(updatedElement);\n  };\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentValues];\n    const index = get(e.target, \"dataset.index\", 0);\n    updatedElement[index] = e.target.value;\n\n    setCurrentValues(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    let queryString = \"\";\n\n    currentKeys.forEach((keyVal, index) => {\n      if (currentKeys[index] && currentValues[index]) {\n        let insertString = `${keyVal}=${currentValues[index]}`;\n        if (index !== 0) {\n          insertString = `&${insertString}`;\n        }\n        queryString = `${queryString}${insertString}`;\n      }\n    });\n\n    onChange(queryString);\n  }, 500);\n\n  const inputs = currentValues.map((element, index) => {\n    return (\n      <Grid\n        item\n        xs={12}\n        className={classes.lineInputBoxes}\n        key={`query-pair-${name}-${index.toString()}`}\n      >\n        <InputBoxWrapper\n          id={`${name}-key-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentKeys[index]}\n          onChange={onChangeKey}\n          index={index}\n          placeholder={keyPlaceholder}\n        />\n        <span className={classes.queryDiv}>:</span>\n        <InputBoxWrapper\n          id={`${name}-value-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentValues[index]}\n          onChange={onChangeValue}\n          index={index}\n          placeholder={valuePlaceholder}\n          overlayIcon={index === currentValues.length - 1 ? <AddIcon /> : null}\n          overlayAction={() => {\n            addEmptyLine();\n          }}\n        />\n      </Grid>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <HelpIcon className={classes.tooltip} />\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n        <Grid\n          item\n          xs={12}\n          className={`${withBorder ? classes.inputWithBorder : \"\"}`}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\nexport default withStyles(styles)(QueryMultiSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"0 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <ModalError />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","StyledSwitch","padding","margin","switchBase","transform","color","palette","common","white","boxShadow","opacity","thumb","marginLeft","track","transition","transitions","create","checked","focusVisible","switchContainer","justifyContent","Switch","divContainer","indicatorLabelOn","indicatorLabel","fieldDescription","marginTop","tooltip","actionsTray","fieldBasic","label","onChange","value","id","name","disabled","switchOnly","description","indicatorLabels","switchComponent","clsx","length","inputProps","disableRipple","disableFocusRipple","disableTouchRipple","sm","md","htmlFor","inputLabel","tooltipContainer","placement","textAlign","component","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","type","autoComplete","multiline","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","autoFocus","errorInField","inputBoxContainer","noMinWidthLabel","fullWidth","helperText","inputRebase","onClick","size","inputWithBorder","overflowY","lineInputBoxes","queryDiv","alignSelf","elements","keyPlaceholder","valuePlaceholder","withBorder","useState","currentKeys","setCurrentKeys","currentValues","setCurrentValues","bottomList","createRef","useEffect","elementsSplit","split","keys","values","forEach","element","splittedVals","push","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeKey","e","persist","updatedElement","get","target","onChangeValue","debounce","queryString","keyVal","insertString","inputs","map","toString","trim","keysList","valuesList","addEmptyLine","fieldContainer","ref","timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","setModalErrorSnackMessage","connect","state","modalSnackMessage","system","modalSnackBar","modalErrorContainer","borderLeftWidth","zIndex","left","transitionDuration","modalErrorShow","closeButton","cursor","errorTitle","errorLabel","messageIcon","detailsButton","transformDuration","extraDetailsContainer","fontStyle","lineHeight","overflow","extraDetailsOpen","arrowElement","arrowOpen","customStyle","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","detailedError","errorMessage","message","messageDetails","Fragment","style","onMouseOver","onMouseLeave","setInterval","Close","ErrorOutline","detailsContainerLink","ArrowRight","connector","setModalSnackMessage","deleteDialogStyles","content","customDialogSize","snackBarCommon","onClose","modalOpen","children","wideLimit","noContentPadding","titleIcon","openSnackbar","setOpenSnackbar","customSize","paper","detailedErrorMsg","Dialog","open","scroll","event","reason","DialogTitle","titleText","closeContainer","IconButton","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","DialogContent"],"sourceRoot":""}