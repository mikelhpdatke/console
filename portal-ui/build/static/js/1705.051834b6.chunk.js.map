{"version":3,"file":"static/js/1705.051834b6.chunk.js","mappings":"+QA4BMA,GAAoBC,EAAAA,EAAAA,GACxBC,EAAAA,MAAW,kBAAM,0FAEbC,GAAuBF,EAAAA,EAAAA,GAC3BC,EAAAA,MAAW,kBAAM,6DAwJnB,UAhJmB,SAAC,GAA0D,IAAxDE,EAAuD,EAAvDA,qBAAsBC,EAAiC,EAAjCA,WAC1C,GAAwBC,EAAAA,EAAAA,UAAc,MAAtC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAwCF,EAAAA,EAAAA,WAAkB,GAA1D,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAA8BJ,EAAAA,EAAAA,UAAmB,IAAjD,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAAsCN,EAAAA,EAAAA,UAAmB,CAAC,GAAI,KAA9D,eAAOO,EAAP,KAAoBC,EAApB,KACA,GAAoDR,EAAAA,EAAAA,WAAkB,GAAtE,eAAOS,EAAP,KAA2BC,EAA3B,KAiCA,GAAmCC,EAAAA,EAAAA,IAXf,SAACC,GACuB,IAAD,IAA9B,MAAPA,GAA+B,OAAb,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAKC,WACtBX,EAAO,OAACU,QAAD,IAACA,GAAD,UAACA,EAAKC,eAAN,aAAC,EAAcZ,MACtBK,EAAWQ,OAAOC,KAAP,OAAYH,QAAZ,IAAYA,GAAZ,UAAYA,EAAKC,eAAjB,aAAY,EAAcZ,WAIjB,SAACe,GACvBlB,EAAqBkB,MAGvB,eAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAY,WAChBD,EAAc,MAAD,0BAA2BnB,KAQ1C,OALAqB,EAAAA,EAAAA,YAAU,WACRD,MAEC,CAACpB,KAGF,UAAC,IAAD,WACGkB,GACC,SAAC,IAAD,CAAkBI,MAAM,UAAUC,KAAM,GAAIC,QAAQ,kBAClD,MACJ,SAAC,IAAD,CACEC,OAAQ,CAACC,EAAAA,GAAAA,uBACTC,SAAU3B,EAFZ,UAIE,UAAC,IAAD,CACE4B,GAAI,CACFC,QAAS,OACTC,SAAU,UAHd,WAME,SAAC,IAAD,UACGxB,GACCA,EAAQyB,KAAI,SAACC,EAAaC,GACxB,IAAMC,EAAMC,GAAAA,CAAIjC,EAAD,UAAU8B,GAAU,IACnC,MAAY,KAARE,GAEA,SAAC,IAAD,CAEET,OAAQ,CAACC,EAAAA,GAAAA,uBACTC,SAAU3B,EACVoC,UAAQ,EACRC,WAAY,CACVC,WAAY,KACZC,SAAU,MAPd,UAUE,SAAC,IAAD,CACEC,MAAO,CACLC,cAAe,OACfC,YAAa,OAEfnB,KAAK,QACLoB,MAAK,UAAKX,EAAL,cAAiBE,GACtBZ,MAAM,UACNgB,YAAY,SAAC,IAAD,IACZC,SAAU,YA3Ed,SAACP,EAAgBY,GACjCnC,EAAe,CAACuB,EAAQY,IACxBjC,GAAsB,GA0EAkC,CAAUb,EAAQE,OApBxB,eACeD,IAyBZ,WAIb,SAAC,IAAD,CACER,OAAQ,CAACC,EAAAA,GAAAA,uBACTC,SAAU3B,EACVqC,WAAY,CAAES,UAAU,EAAMC,QAAS,MAHzC,UAKE,SAAC,IAAD,CACEP,MAAO,CAAEQ,SAAU,GAAIC,UAAW,QAClCC,MAAM,SAAC,IAAD,IACNC,WAAS,EACT5B,KAAK,QACLoB,MAAM,UACNrB,MAAM,UACNE,QAAQ,WACRuB,QAAS,WACP1C,GAAgB,aASzBD,IACC,SAACT,EAAD,CACEyD,UAAWhD,EACXiD,YAAanD,EACbF,WAAYA,EACZsD,iBAzHiB,SAACC,GACxBlD,GAAgB,GACZkD,GACFnC,OAyHCV,IACC,SAACZ,EAAD,CACE0D,WAAY9C,EACZ2C,YAAanD,EACbF,WAAYA,EACZsD,iBArHoB,SAACC,GAC3B5C,GAAsB,GAElB4C,GACFnC,KAkHIZ,YAAaA,S,0DClJvB,IAvBe,SACbiD,EACAC,GAEA,OAAkCzD,EAAAA,EAAAA,WAAkB,GAApD,eAAOiB,EAAP,KAAkByC,EAAlB,KAgBA,MAAO,CAACzC,EAdQ,SAAC0C,EAAgBC,EAAaC,GAC5CH,GAAa,GACbI,EAAAA,EAAAA,OACUH,EAAQC,EAAKC,GACpBE,MAAK,SAACnD,GACL8C,GAAa,GACbF,EAAU5C,MAEXoD,OAAM,SAAChD,GACN0C,GAAa,GACbD,EAAQzC,U,0BCtBZiD,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,wCACD,OAEJN,EAAQ,EAAUG","sources":["screens/Console/Buckets/BucketDetails/SummaryItems/BucketTags.tsx","screens/Console/Common/Hooks/useApi.tsx","../node_modules/@mui/icons-material/Add.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { Bucket } from \"../../../Watch/types\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport useApi from \"../../../Common/Hooks/useApi\";\nimport { Box, CircularProgress } from \"@mui/material\";\nimport { IAM_SCOPES } from \"../../../../../common/SecureComponent/permissions\";\nimport { SecureComponent } from \"../../../../../common/SecureComponent\";\nimport get from \"lodash/get\";\nimport Chip from \"@mui/material/Chip\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport withSuspense from \"../../../Common/Components/withSuspense\";\n\nconst AddBucketTagModal = withSuspense(\n  React.lazy(() => import(\"../AddBucketTagModal\"))\n);\nconst DeleteBucketTagModal = withSuspense(\n  React.lazy(() => import(\"../DeleteBucketTagModal\"))\n);\n\ntype BucketTagProps = {\n  setErrorSnackMessage: (err: ErrorResponseHandler) => void;\n  bucketName: string;\n};\n\nconst BucketTags = ({ setErrorSnackMessage, bucketName }: BucketTagProps) => {\n  const [tags, setTags] = useState<any>(null);\n  const [tagModalOpen, setTagModalOpen] = useState<boolean>(false);\n  const [tagKeys, setTagKeys] = useState<string[]>([]);\n  const [selectedTag, setSelectedTag] = useState<string[]>([\"\", \"\"]);\n  const [deleteTagModalOpen, setDeleteTagModalOpen] = useState<boolean>(false);\n\n  const closeAddTagModal = (refresh: boolean) => {\n    setTagModalOpen(false);\n    if (refresh) {\n      fetchTags();\n    }\n  };\n\n  const deleteTag = (tagKey: string, tagLabel: string) => {\n    setSelectedTag([tagKey, tagLabel]);\n    setDeleteTagModalOpen(true);\n  };\n\n  const closeDeleteTagModal = (refresh: boolean) => {\n    setDeleteTagModalOpen(false);\n\n    if (refresh) {\n      fetchTags();\n    }\n  };\n\n  const onTagLoaded = (res: Bucket) => {\n    if (res != null && res?.details != null) {\n      setTags(res?.details?.tags);\n      setTagKeys(Object.keys(res?.details?.tags));\n    }\n  };\n\n  const onTagLoadFailed = (err: ErrorResponseHandler) => {\n    setErrorSnackMessage(err);\n  };\n\n  const [isLoading, invokeTagsApi] = useApi(onTagLoaded, onTagLoadFailed);\n\n  const fetchTags = () => {\n    invokeTagsApi(\"GET\", `/api/v1/buckets/${bucketName}`);\n  };\n\n  useEffect(() => {\n    fetchTags();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [bucketName]);\n\n  return (\n    <Box>\n      {isLoading ? (\n        <CircularProgress color=\"primary\" size={16} variant=\"indeterminate\" />\n      ) : null}\n      <SecureComponent\n        scopes={[IAM_SCOPES.S3_GET_BUCKET_TAGGING]}\n        resource={bucketName}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            flexFlow: \"column\",\n          }}\n        >\n          <Box>\n            {tagKeys &&\n              tagKeys.map((tagKey: any, index: any) => {\n                const tag = get(tags, `${tagKey}`, \"\");\n                if (tag !== \"\") {\n                  return (\n                    <SecureComponent\n                      key={`chip-${index}`}\n                      scopes={[IAM_SCOPES.S3_PUT_BUCKET_TAGGING]}\n                      resource={bucketName}\n                      matchAll\n                      errorProps={{\n                        deleteIcon: null,\n                        onDelete: null,\n                      }}\n                    >\n                      <Chip\n                        style={{\n                          textTransform: \"none\",\n                          marginRight: \"5px\",\n                        }}\n                        size=\"small\"\n                        label={`${tagKey} : ${tag}`}\n                        color=\"primary\"\n                        deleteIcon={<CloseIcon />}\n                        onDelete={() => {\n                          deleteTag(tagKey, tag);\n                        }}\n                      />\n                    </SecureComponent>\n                  );\n                }\n                return null;\n              })}\n          </Box>\n\n          <SecureComponent\n            scopes={[IAM_SCOPES.S3_PUT_BUCKET_TAGGING]}\n            resource={bucketName}\n            errorProps={{ disabled: true, onClick: null }}\n          >\n            <Chip\n              style={{ maxWidth: 80, marginTop: \"10px\" }}\n              icon={<AddIcon />}\n              clickable\n              size=\"small\"\n              label=\"Add tag\"\n              color=\"primary\"\n              variant=\"outlined\"\n              onClick={() => {\n                setTagModalOpen(true);\n              }}\n            />\n          </SecureComponent>\n        </Box>\n      </SecureComponent>\n\n      {/** Modals **/}\n\n      {tagModalOpen && (\n        <AddBucketTagModal\n          modalOpen={tagModalOpen}\n          currentTags={tags}\n          bucketName={bucketName}\n          onCloseAndUpdate={closeAddTagModal}\n        />\n      )}\n      {deleteTagModalOpen && (\n        <DeleteBucketTagModal\n          deleteOpen={deleteTagModalOpen}\n          currentTags={tags}\n          bucketName={bucketName}\n          onCloseAndUpdate={closeDeleteTagModal}\n          selectedTag={selectedTag}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default BucketTags;\n","import { useState } from \"react\";\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\n\ntype NoReturnFunction = (param?: any) => void;\ntype ApiMethodToInvoke = (method: string, url: string, data?: any) => void;\ntype IsApiInProgress = boolean;\n\nconst useApi = (\n  onSuccess: NoReturnFunction,\n  onError: NoReturnFunction\n): [IsApiInProgress, ApiMethodToInvoke] => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const callApi = (method: string, url: string, data?: any) => {\n    setIsLoading(true);\n    api\n      .invoke(method, url, data)\n      .then((res: any) => {\n        setIsLoading(false);\n        onSuccess(res);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setIsLoading(false);\n        onError(err);\n      });\n  };\n\n  return [isLoading, callApi];\n};\n\nexport default useApi;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;"],"names":["AddBucketTagModal","withSuspense","React","DeleteBucketTagModal","setErrorSnackMessage","bucketName","useState","tags","setTags","tagModalOpen","setTagModalOpen","tagKeys","setTagKeys","selectedTag","setSelectedTag","deleteTagModalOpen","setDeleteTagModalOpen","useApi","res","details","Object","keys","err","isLoading","invokeTagsApi","fetchTags","useEffect","color","size","variant","scopes","IAM_SCOPES","resource","sx","display","flexFlow","map","tagKey","index","tag","get","matchAll","errorProps","deleteIcon","onDelete","style","textTransform","marginRight","label","tagLabel","deleteTag","disabled","onClick","maxWidth","marginTop","icon","clickable","modalOpen","currentTags","onCloseAndUpdate","refresh","deleteOpen","onSuccess","onError","setIsLoading","method","url","data","api","then","catch","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}