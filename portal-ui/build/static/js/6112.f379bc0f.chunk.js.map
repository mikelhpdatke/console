{"version":3,"file":"static/js/6112.f379bc0f.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/SummaryItems/RBIconButton.tsx","screens/Console/Common/AButton/AButton.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/UsageBarWrapper/LabelValuePair.tsx","screens/Console/Tenants/ListTenants/utils.ts","screens/Console/Tenants/TenantDetails/UpdateTenantModal.tsx","screens/Console/Common/UsageBarWrapper/SummaryUsageBar.tsx","screens/Console/Common/UsageBarWrapper/StackRow.tsx","screens/Console/Tenants/TenantDetails/TenantSummary.tsx","screens/shared/ErrorBlock.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport BoxIconButton from \"../../../Common/BoxIconButton/BoxIconButton\";\nimport { IconButtonProps } from \"@mui/material\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\n\ntype DeleteButtonProps = {\n  onClick: (e: any) => void;\n  text?: string;\n  disabled?: boolean;\n  size?: string;\n  tooltip?: string;\n  classes?: any;\n  icon?: React.ReactNode;\n  [x: string]: any;\n};\n\ntype RBIconProps = Partial<IconButtonProps> & DeleteButtonProps;\n\nconst useStyles = makeStyles((theme: Theme) => {\n  const getButtonColor = (props: RBIconProps) => {\n    const { variant, color } = props;\n\n    let tgtColor = theme.palette.primary.main;\n\n    if (color === \"primary\" && variant === \"contained\") {\n      tgtColor = theme.palette.primary.contrastText;\n    } else if (color === \"primary\" && variant === \"outlined\") {\n      tgtColor = theme.palette.primary.main;\n    } else if (color === \"secondary\") {\n      tgtColor = theme.palette.secondary.main;\n    }\n\n    return tgtColor;\n  };\n\n  return {\n    root: {\n      padding: \"7px\",\n      color: (props: RBIconProps) => getButtonColor(props),\n      borderColor: (props: RBIconProps) =>\n        props.color === \"secondary\"\n          ? theme.palette.secondary.main\n          : theme.palette.primary.main,\n      \"& svg.min-icon\": {\n        width: 12,\n        marginLeft: (props: RBIconProps) => (props.text ? \"5px\" : \"0px\"),\n        \"@media (max-width: 900px)\": {\n          width: 16,\n          marginLeft: \"0px !important\",\n        },\n      },\n    },\n  };\n});\n\nconst RBIconButton = (props: RBIconProps) => {\n  const classes = useStyles(props);\n\n  const {\n    onClick,\n    text = \"\",\n    disabled = false,\n    tooltip,\n    icon = null,\n    ...restProps\n  } = props;\n\n  return (\n    <BoxIconButton\n      classes={classes}\n      tooltip={tooltip || text}\n      variant=\"outlined\"\n      onClick={onClick}\n      disabled={disabled}\n      color=\"secondary\"\n      size=\"medium\"\n      sx={{\n        border: \"1px solid #f44336\",\n        \"& span\": {\n          fontSize: 14,\n          \"@media (max-width: 900px)\": {\n            display: \"none\",\n          },\n        },\n      }}\n      {...restProps}\n    >\n      <span>{text}</span> {icon}\n    </BoxIconButton>\n  );\n};\nexport default RBIconButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      border: 0,\n      backgroundColor: \"transparent\",\n      textDecoration: \"underline\",\n      cursor: \"pointer\",\n      fontSize: \"inherit\",\n      color: theme.palette.info.main,\n      fontFamily: \"Lato, sans-serif\",\n    },\n  });\n\ninterface IAButton extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst AButton = ({ classes, children, ...rest }: IAButton) => {\n  return (\n    <button {...rest} className={classes.root}>\n      {children}\n    </button>\n  );\n};\n\nexport default withStyles(styles)(AButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid item xs={12} sm={4} md={3}>\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"0 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <ModalError />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","import React from \"react\";\nimport { Stack } from \"@mui/material\";\n\ntype LabelValuePairProps = {\n  label?: any;\n  value?: any;\n  orientation?: any;\n  stkProps?: any;\n  lblProps?: any;\n  valProps?: any;\n};\n\nconst LabelValuePair = ({\n  label = null,\n  value = \"-\",\n  orientation = \"column\",\n  stkProps = {},\n  lblProps = {},\n  valProps = {},\n}: LabelValuePairProps) => {\n  return (\n    <Stack direction={{ xs: \"column\", sm: orientation }} {...stkProps}>\n      <label style={{ marginRight: 5, fontWeight: 600 }} {...lblProps}>\n        {label}\n      </label>\n      <label style={{ marginRight: 5, fontWeight: 500 }} {...valProps}>\n        {value}\n      </label>\n    </Stack>\n  );\n};\n\nexport default LabelValuePair;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport get from \"lodash/get\";\nimport { ITenant } from \"./types\";\n\nexport interface Opts {\n  label: string;\n  value: string;\n}\n\nexport interface IQuotaElement {\n  hard: number;\n  name: string;\n}\n\nexport interface IQuotas {\n  elements?: IQuotaElement[];\n  name: string;\n}\n\nexport const minMemReq = 2147483648;\n\nexport interface KeyPair {\n  id: string;\n  encoded_cert: string;\n  encoded_key: string;\n  cert: string;\n  key: string;\n}\n\nexport const ecListTransform = (ecList: string[]): Opts[] => {\n  return ecList.map((value) => {\n    return { label: value, value };\n  });\n};\n\nexport const getLimitSizes = (resourceQuotas: IQuotas) => {\n  const quotas: IQuotaElement[] = get(resourceQuotas, \"elements\", []);\n\n  const returnQuotas: any = {};\n\n  quotas.forEach((rsQuota) => {\n    const stCName = rsQuota.name.split(\n      \".storageclass.storage.k8s.io/requests.storage\"\n    )[0];\n    const hard = get(rsQuota, \"hard\", 0);\n    const used = get(rsQuota, \"used\", 0);\n\n    returnQuotas[stCName] = hard - used;\n  });\n\n  return returnQuotas;\n};\n\nexport const tenantIsOnline = (tenant: ITenant): boolean => {\n  if (tenant.currentState === \"\") {\n    return false;\n  }\n  if (\n    !tenant.status &&\n    tenant.health_status !== \"green\" &&\n    tenant.health_status !== \"yellow\"\n  ) {\n    return false;\n  }\n  if (\n    tenant.status &&\n    tenant.status.health_status !== \"green\" &&\n    tenant.status.health_status !== \"yellow\"\n  ) {\n    return false;\n  }\n  return true;\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState, Fragment, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, Grid } from \"@mui/material\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport api from \"../../../../common/api\";\n\ninterface IUpdateTenantModal {\n  open: boolean;\n  closeModalAndRefresh: (update: boolean) => any;\n  namespace: string;\n  idTenant: string;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    infoText: {\n      fontSize: 14,\n    },\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  });\n\nconst UpdateTenantModal = ({\n  open,\n  closeModalAndRefresh,\n  namespace,\n  idTenant,\n  setModalErrorSnackMessage,\n  classes,\n}: IUpdateTenantModal) => {\n  const [isSending, setIsSending] = useState<boolean>(false);\n  const [minioImage, setMinioImage] = useState<string>(\"\");\n  const [imageRegistry, setImageRegistry] = useState<boolean>(false);\n  const [imageRegistryEndpoint, setImageRegistryEndpoint] =\n    useState<string>(\"\");\n  const [imageRegistryUsername, setImageRegistryUsername] =\n    useState<string>(\"\");\n  const [imageRegistryPassword, setImageRegistryPassword] =\n    useState<string>(\"\");\n  const [validMinioImage, setValidMinioImage] = useState<boolean>(true);\n\n  const validateImage = useCallback(\n    (fieldToCheck: string) => {\n      const pattern = new RegExp(\"^$|^((.*?)/(.*?):(.+))$\");\n\n      switch (fieldToCheck) {\n        case \"minioImage\":\n          setValidMinioImage(pattern.test(minioImage));\n          break;\n      }\n    },\n    [minioImage]\n  );\n\n  useEffect(() => {\n    validateImage(\"minioImage\");\n  }, [minioImage, validateImage]);\n\n  const closeAction = () => {\n    closeModalAndRefresh(false);\n  };\n\n  const resetForm = () => {\n    setMinioImage(\"\");\n    setImageRegistry(false);\n    setImageRegistryEndpoint(\"\");\n    setImageRegistryUsername(\"\");\n    setImageRegistryPassword(\"\");\n  };\n\n  const updateMinIOImage = () => {\n    setIsSending(true);\n\n    let payload = {\n      image: minioImage,\n      enable_prometheus: true,\n    };\n\n    if (imageRegistry) {\n      const registry: any = {\n        image_registry: {\n          registry: imageRegistryEndpoint,\n          username: imageRegistryUsername,\n          password: imageRegistryPassword,\n        },\n      };\n      payload = {\n        ...payload,\n        ...registry,\n      };\n    }\n\n    api\n      .invoke(\n        \"PUT\",\n        `/api/v1/namespaces/${namespace}/tenants/${idTenant}`,\n        payload\n      )\n      .then(() => {\n        setIsSending(false);\n        closeModalAndRefresh(true);\n      })\n      .catch((error: ErrorResponseHandler) => {\n        setModalErrorSnackMessage(error);\n        setIsSending(false);\n      });\n  };\n\n  return (\n    <ModalWrapper\n      title={\"Update MinIO Version\"}\n      modalOpen={open}\n      onClose={closeAction}\n    >\n      <Grid container>\n        <Grid item xs={12} className={classes.modalFormScrollable}>\n          <div className={classes.infoText}>\n            Please enter the MinIO image from dockerhub to use. If blank, then\n            latest build will be used.\n          </div>\n          <br />\n          <br />\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              value={minioImage}\n              label={\"MinIO's Image\"}\n              id={\"minioImage\"}\n              name={\"minioImage\"}\n              placeholder={\"E.g. minio/minio:RELEASE.2022-01-08T03-11-54Z\"}\n              onChange={(e) => {\n                setMinioImage(e.target.value);\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <FormSwitchWrapper\n              value=\"imageRegistry\"\n              id=\"setImageRegistry\"\n              name=\"setImageRegistry\"\n              checked={imageRegistry}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setImageRegistry(!imageRegistry);\n              }}\n              label={\"Set Custom Image Registry\"}\n              indicatorLabels={[\"Yes\", \"No\"]}\n            />\n          </Grid>\n          {imageRegistry && (\n            <Fragment>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  value={imageRegistryEndpoint}\n                  label={\"Endpoint\"}\n                  id={\"imageRegistry\"}\n                  name={\"imageRegistry\"}\n                  placeholder={\"E.g. https://index.docker.io/v1/\"}\n                  onChange={(e) => {\n                    setImageRegistryEndpoint(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  value={imageRegistryUsername}\n                  label={\"Username\"}\n                  id={\"imageRegistryUsername\"}\n                  name={\"imageRegistryUsername\"}\n                  placeholder={\"Enter image registry username\"}\n                  onChange={(e) => {\n                    setImageRegistryUsername(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  value={imageRegistryPassword}\n                  label={\"Password\"}\n                  id={\"imageRegistryPassword\"}\n                  name={\"imageRegistryPassword\"}\n                  placeholder={\"Enter image registry password\"}\n                  onChange={(e) => {\n                    setImageRegistryPassword(e.target.value);\n                  }}\n                />\n              </Grid>\n            </Fragment>\n          )}\n        </Grid>\n        <Grid item xs={12} className={classes.modalButtonBar}>\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            variant=\"outlined\"\n            onClick={resetForm}\n          >\n            Clear\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={\n              !validMinioImage ||\n              (imageRegistry &&\n                (imageRegistryEndpoint.trim() === \"\" ||\n                  imageRegistryUsername.trim() === \"\" ||\n                  imageRegistryPassword.trim() === \"\")) ||\n              isSending\n            }\n            onClick={updateMinIOImage}\n          >\n            Save\n          </Button>\n        </Grid>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(UpdateTenantModal));\n","import React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress, Stack } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport ErrorBlock from \"../../../shared/ErrorBlock\";\nimport { CircleIcon } from \"../../../../icons\";\nimport LabelValuePair from \"./LabelValuePair\";\nimport { ValueUnit } from \"../../Tenants/ListTenants/types\";\nimport { niceBytes } from \"../../../../common/utils\";\n\ninterface ISummaryUsageBar {\n  maxValue: number | undefined;\n  currValue: number | undefined;\n  label: string;\n  error: string;\n  loading: boolean;\n  classes: any;\n  labels?: boolean;\n  healthStatus?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    allValue: {\n      fontSize: 16,\n      fontWeight: 700,\n      marginBottom: 8,\n    },\n    currentUsage: {\n      fontSize: 12,\n      marginTop: 8,\n    },\n    centerItem: {\n      textAlign: \"center\",\n    },\n  });\n\nexport const BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#F4F4F4\",\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#081C42\",\n  },\n  padChart: {\n    padding: \"5px\",\n  },\n}))(LinearProgress);\n\nconst SummaryUsageBar = ({\n  classes,\n  maxValue,\n  currValue,\n  healthStatus,\n  loading,\n  error,\n}: ISummaryUsageBar) => {\n  var capacity: ValueUnit = { value: \"n/a\", unit: \"\" };\n  var used: ValueUnit = { value: \"n/a\", unit: \"\" };\n\n  if (maxValue) {\n    const b = niceBytes(`${maxValue}`, true);\n    const parts = b.split(\" \");\n    capacity.value = parts[0];\n    capacity.unit = parts[1];\n  }\n  if (currValue) {\n    const b = niceBytes(`${currValue}`, true);\n    const parts = b.split(\" \");\n    used.value = parts[0];\n    used.unit = parts[1];\n  }\n\n  let percentagelValue = 0;\n  if (currValue && maxValue) {\n    percentagelValue = (currValue * 100) / maxValue;\n  }\n\n  const renderComponent = () => {\n    if (!loading) {\n      return error !== \"\" ? (\n        <ErrorBlock errorMessage={error} withBreak={false} />\n      ) : (\n        <Grid item xs={12}>\n          <BorderLinearProgress\n            variant=\"determinate\"\n            value={percentagelValue}\n          />\n          <Stack\n            direction={{ xs: \"column\", sm: \"row\" }}\n            spacing={{ xs: 1, sm: 2, md: 4 }}\n            alignItems={\"stretch\"}\n            margin={\"15px 0 15px 0\"}\n          >\n            <LabelValuePair\n              label={\"Storage Capacity:\"}\n              orientation={\"row\"}\n              value={`${capacity.value} ${capacity.unit}`}\n            />\n            <LabelValuePair\n              label={\"Used:\"}\n              orientation={\"row\"}\n              value={`${used.value} ${used.unit}`}\n            />\n            {healthStatus && (\n              <LabelValuePair\n                orientation={\"row\"}\n                label={\"Health:\"}\n                value={\n                  <span className={healthStatus}>\n                    <CircleIcon />\n                  </span>\n                }\n              />\n            )}\n          </Stack>\n        </Grid>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div className={classes.padChart}>\n          <Grid item xs={12} className={classes.centerItem}>\n            <CircularProgress\n              color=\"primary\"\n              size={40}\n              variant=\"indeterminate\"\n            />\n          </Grid>\n        </div>\n      )}\n      {renderComponent()}\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SummaryUsageBar);\n","import React from \"react\";\nimport { Stack } from \"@mui/material\";\n\nconst StackRow = ({\n  children = null,\n  ...restProps\n}: {\n  children?: any;\n  [x: string]: any;\n}) => {\n  return (\n    <Stack\n      direction={{ xs: \"column\", sm: \"row\" }}\n      justifyContent=\"space-between\"\n      margin={\"5px 0 5px 0\"}\n      spacing={{ xs: 1, sm: 2, md: 4 }}\n      {...restProps}\n    >\n      {children}\n    </Stack>\n  );\n};\nexport default StackRow;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  containerForHeader,\n  tenantDetailsStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { Box, Grid, Stack } from \"@mui/material\";\nimport Paper from \"@mui/material/Paper\";\nimport { ITenant } from \"../ListTenants/types\";\nimport UpdateTenantModal from \"./UpdateTenantModal\";\nimport { AppState } from \"../../../../store\";\nimport history from \"./../../../../history\";\nimport { tenantIsOnline } from \"../ListTenants/utils\";\nimport AButton from \"../../Common/AButton/AButton\";\nimport { styled } from \"@mui/styles\";\nimport SummaryUsageBar from \"../../Common/UsageBarWrapper/SummaryUsageBar\";\nimport LabelValuePair from \"../../Common/UsageBarWrapper/LabelValuePair\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport StackRow from \"../../Common/UsageBarWrapper/StackRow\";\nimport { SettingsIcon } from \"../../../../icons\";\nimport RBIconButton from \"../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\n\ninterface ITenantsSummary {\n  classes: any;\n  match: any;\n  tenant: ITenant | null;\n  logEnabled: boolean;\n  monitoringEnabled: boolean;\n  encryptionEnabled: boolean;\n  minioTLS: boolean;\n  consoleTLS: boolean;\n  consoleEnabled: boolean;\n  adEnabled: boolean;\n  oidcEnabled: boolean;\n  loadingTenant: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    redState: {\n      color: theme.palette.error.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        marginRight: 4,\n      },\n    },\n    yellowState: {\n      color: theme.palette.warning.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        marginRight: 4,\n      },\n    },\n    greenState: {\n      color: theme.palette.success.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        marginRight: 4,\n      },\n    },\n    greyState: {\n      color: \"grey\",\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        marginRight: 4,\n      },\n    },\n    centerAlign: {\n      textAlign: \"center\",\n    },\n    detailSection: {\n      \"& div\": {\n        \"& b,i\": {\n          minWidth: 80,\n          display: \"block\",\n          float: \"left\",\n        },\n        \"& i\": {\n          fontStyle: \"normal\",\n          wordWrap: \"break-word\",\n          overflowWrap: \"break-word\",\n        },\n        \"& div\": {\n          clear: \"both\",\n        },\n        clear: \"both\",\n        marginBottom: 2,\n      },\n    },\n    linkedSection: {\n      color: theme.palette.info.main,\n    },\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst StackItem = styled(Paper)(({ theme }) => ({\n  border: 0,\n}));\n\nconst healthStatusToClass = (health_status: string = \"red\", classes: any) => {\n  return health_status === \"red\"\n    ? classes.redState\n    : health_status === \"yellow\"\n    ? classes.yellowState\n    : health_status === \"green\"\n    ? classes.greenState\n    : classes.greyState;\n};\n\nconst StorageSummary = ({ tenant, classes }: Partial<ITenantsSummary>) => {\n  return (\n    <SummaryUsageBar\n      currValue={tenant?.status?.usage?.raw_usage}\n      maxValue={tenant?.status?.usage?.raw}\n      label={\"Storage\"}\n      error={\"\"}\n      loading={false}\n      healthStatus={healthStatusToClass(tenant?.status?.health_status, classes)}\n    />\n  );\n};\n\nconst getToggle = (toggleValue: boolean, idPrefix = \"\") => {\n  return (\n    <FormSwitchWrapper\n      indicatorLabels={[\"Enabled\", \"Disabled\"]}\n      checked={toggleValue}\n      value={toggleValue}\n      id={`${idPrefix}-status`}\n      name={`${idPrefix}-status`}\n      onChange={() => {}}\n      switchOnly\n    />\n  );\n};\n\nconst featureRowStyle = {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  marginTop: \"10px\",\n  \"@media (max-width: 600px)\": {\n    flexFlow: \"column\",\n  },\n};\n\nconst featureItemStyleProps = {\n  stkProps: {\n    sx: {\n      flex: 1,\n      marginRight: 10,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      \"@media (max-width: 900px)\": {\n        marginRight: \"25px\",\n      },\n    },\n  },\n  lblProps: {\n    style: {\n      minWidth: 100,\n    },\n  },\n};\nconst TenantSummary = ({\n  classes,\n  match,\n  tenant,\n  logEnabled,\n  monitoringEnabled,\n  encryptionEnabled,\n  minioTLS,\n  consoleTLS,\n  consoleEnabled,\n  adEnabled,\n  oidcEnabled,\n  loadingTenant,\n}: ITenantsSummary) => {\n  const [poolCount, setPoolCount] = useState<number>(0);\n  const [instances, setInstances] = useState<number>(0);\n  const [volumes, setVolumes] = useState<number>(0);\n  const [updateMinioVersion, setUpdateMinioVersion] = useState<boolean>(false);\n\n  const tenantName = match.params[\"tenantName\"];\n  const tenantNamespace = match.params[\"tenantNamespace\"];\n\n  useEffect(() => {\n    if (tenant) {\n      setPoolCount(tenant.pools.length);\n      setVolumes(tenant.total_volumes || 0);\n      setInstances(tenant.total_instances || 0);\n    }\n  }, [tenant]);\n\n  return (\n    <Fragment>\n      {updateMinioVersion && (\n        <UpdateTenantModal\n          open={updateMinioVersion}\n          closeModalAndRefresh={() => {\n            setUpdateMinioVersion(false);\n          }}\n          idTenant={tenantName}\n          namespace={tenantNamespace}\n        />\n      )}\n\n      <Stack\n        direction={{ xs: \"column-reverse\", sm: \"row\" }}\n        justifyContent=\"space-between\"\n      >\n        <StackItem>\n          <h3>Details</h3>\n        </StackItem>\n        <StackItem>\n          <RBIconButton\n            tooltip={\"Manage Tenant\"}\n            text={\"Manage Tenant\"}\n            onClick={() => {\n              history.push(\n                `/namespaces/${tenantNamespace}/tenants/${tenantName}/hop`\n              );\n            }}\n            disabled={!tenant || !tenantIsOnline(tenant)}\n            icon={<SettingsIcon />}\n            color=\"primary\"\n            variant={\"contained\"}\n          />\n        </StackItem>\n      </Stack>\n\n      <StorageSummary tenant={tenant} classes={classes} />\n\n      <Grid container>\n        <Grid item xs={12} sm={12} md={8}>\n          <Grid item xs={12}>\n            <LabelValuePair label={\"State:\"} value={tenant?.currentState} />\n          </Grid>\n          <Grid item xs={12}>\n            <LabelValuePair\n              label=\"MinIO:\"\n              value={\n                <AButton\n                  style={{\n                    overflow: \"hidden\",\n                    textOverflow: \"ellipsis\",\n                    whiteSpace: \"normal\",\n                    wordBreak: \"break-all\",\n                  }}\n                  onClick={() => {\n                    setUpdateMinioVersion(true);\n                  }}\n                >\n                  {tenant ? tenant.image : \"\"}\n                </AButton>\n              }\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <LabelValuePair\n              label={\"Endpoint:\"}\n              value={\n                <a\n                  href={tenant?.endpoints?.minio}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className={classes.linkedSection}\n                >\n                  {tenant?.endpoints?.minio || \"-\"}\n                </a>\n              }\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <LabelValuePair\n              label={\"Console:\"}\n              value={\n                <a\n                  href={tenant?.endpoints?.console}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className={classes.linkedSection}\n                >\n                  {tenant?.endpoints?.console || \"-\"}\n                </a>\n              }\n            />\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={12} md={4}>\n          <Grid item xs={12}>\n            <LabelValuePair label={\"Instances:\"} value={instances} />\n          </Grid>\n          <Grid item xs={12}>\n            <LabelValuePair\n              label={\"Clusters:\"}\n              value={poolCount}\n              stkProps={{\n                style: {\n                  marginRight: 47,\n                },\n              }}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <LabelValuePair\n              label=\"Total Drives:\"\n              value={volumes}\n              stkProps={{\n                style: {\n                  marginRight: 43,\n                },\n              }}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <LabelValuePair\n              label={\"Write Quorum:\"}\n              value={\n                tenant?.status?.write_quorum ? tenant?.status?.write_quorum : 0\n              }\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <LabelValuePair\n              label={\"Drives Online:\"}\n              value={\n                tenant?.status?.drives_online\n                  ? tenant?.status?.drives_online\n                  : 0\n              }\n              stkProps={{\n                style: {\n                  marginRight: 8,\n                },\n              }}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <LabelValuePair\n              label={\"Drives Offline:\"}\n              value={\n                tenant?.status?.drives_offline\n                  ? tenant?.status?.drives_offline\n                  : 0\n              }\n              stkProps={{\n                style: {\n                  marginRight: 7,\n                },\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Stack>\n        <StackRow\n          sx={{\n            borderBottom: \"1px solid #eaeaea\",\n            margin: 0,\n          }}\n        >\n          <h3\n            style={{\n              marginBottom: 10,\n            }}\n          >\n            Features\n          </h3>\n        </StackRow>\n        <Box sx={{ ...featureRowStyle }}>\n          <LabelValuePair\n            orientation=\"row\"\n            label=\"Logs:\"\n            value={getToggle(logEnabled, \"tenant-log\")}\n            {...featureItemStyleProps}\n          />\n\n          <LabelValuePair\n            orientation=\"row\"\n            label={\"AD/LDAP:\"}\n            value={getToggle(adEnabled, \"tenant-sts\")}\n            {...featureItemStyleProps}\n          />\n          <LabelValuePair\n            orientation=\"row\"\n            label={\"Encryption:\"}\n            value={getToggle(encryptionEnabled, \"tenant-enc\")}\n            {...featureItemStyleProps}\n          />\n        </Box>\n        <Box sx={{ ...featureRowStyle }}>\n          <LabelValuePair\n            orientation=\"row\"\n            label=\"MinIO TLS:\"\n            value={getToggle(minioTLS, \"tenant-tls\")}\n            {...featureItemStyleProps}\n          />\n\n          <LabelValuePair\n            orientation=\"row\"\n            label={\"Monitoring:\"}\n            value={getToggle(monitoringEnabled, \"tenant-monitor\")}\n            {...featureItemStyleProps}\n          />\n          <LabelValuePair\n            orientation=\"row\"\n            label={\"OpenID:\"}\n            value={getToggle(oidcEnabled, \"tenant-oidc\")}\n            {...featureItemStyleProps}\n          />\n        </Box>\n      </Stack>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  loadingTenant: state.tenants.tenantDetails.loadingTenant,\n  selectedTenant: state.tenants.tenantDetails.currentTenant,\n  tenant: state.tenants.tenantDetails.tenantInfo,\n  logEnabled: get(state.tenants.tenantDetails.tenantInfo, \"logEnabled\", false),\n  monitoringEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"monitoringEnabled\",\n    false\n  ),\n  encryptionEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"encryptionEnabled\",\n    false\n  ),\n  minioTLS: get(state.tenants.tenantDetails.tenantInfo, \"minioTLS\", false),\n  consoleTLS: get(state.tenants.tenantDetails.tenantInfo, \"consoleTLS\", false),\n  consoleEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"consoleEnabled\",\n    false\n  ),\n  adEnabled: get(state.tenants.tenantDetails.tenantInfo, \"idpAdEnabled\", false),\n  oidcEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"idpOidcEnabled\",\n    false\n  ),\n});\n\nconst connector = connect(mapState, null);\n\nexport default withStyles(styles)(connector(TenantSummary));\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n"],"names":["useStyles","makeStyles","theme","root","padding","color","props","variant","tgtColor","palette","primary","main","contrastText","secondary","getButtonColor","borderColor","width","marginLeft","text","classes","onClick","disabled","tooltip","icon","restProps","size","sx","border","fontSize","display","withStyles","createStyles","margin","backgroundColor","textDecoration","cursor","info","fontFamily","children","rest","className","StyledSwitch","height","switchBase","transform","common","white","boxShadow","opacity","thumb","track","borderRadius","transition","transitions","create","checked","focusVisible","switchContainer","alignItems","justifyContent","Switch","divContainer","marginBottom","indicatorLabelOn","fontWeight","indicatorLabel","fieldDescription","marginTop","actionsTray","fieldBasic","label","onChange","value","id","name","switchOnly","description","indicatorLabels","switchComponent","clsx","length","inputProps","disableRipple","disableFocusRipple","disableTouchRipple","container","item","xs","sm","md","htmlFor","inputLabel","tooltipContainer","title","placement","textAlign","component","inputStyles","inputFieldStyles","InputField","InputProps","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","type","autoComplete","multiline","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","autoFocus","errorInField","inputBoxContainer","noMinWidthLabel","fullWidth","helperText","inputRebase","timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","setModalErrorSnackMessage","connect","state","modalSnackMessage","system","modalSnackBar","modalErrorContainer","borderLeftWidth","zIndex","left","transitionDuration","modalErrorShow","closeButton","errorTitle","errorLabel","marginRight","messageIcon","detailsButton","paddingLeft","transformDuration","extraDetailsContainer","fontStyle","lineHeight","overflow","extraDetailsOpen","arrowElement","arrowOpen","customStyle","useState","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","useEffect","detailedError","errorMessage","message","get","messageDetails","Fragment","style","onMouseOver","onMouseLeave","setInterval","Close","ErrorOutline","detailsContainerLink","ArrowRight","connector","setModalSnackMessage","deleteDialogStyles","content","paddingBottom","customDialogSize","snackBarCommon","onClose","modalOpen","wideLimit","noContentPadding","titleIcon","openSnackbar","setOpenSnackbar","customSize","paper","detailedErrorMsg","Dialog","open","scroll","event","reason","DialogTitle","titleText","closeContainer","IconButton","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","DialogContent","orientation","stkProps","lblProps","valProps","direction","ecListTransform","ecList","map","getLimitSizes","resourceQuotas","quotas","returnQuotas","forEach","rsQuota","stCName","split","hard","used","tenantIsOnline","tenant","currentState","status","health_status","buttonContainer","infoText","formFieldStyles","modalStyleUtils","closeModalAndRefresh","namespace","idTenant","isSending","setIsSending","minioImage","setMinioImage","imageRegistry","setImageRegistry","imageRegistryEndpoint","setImageRegistryEndpoint","imageRegistryUsername","setImageRegistryUsername","imageRegistryPassword","setImageRegistryPassword","validMinioImage","setValidMinioImage","validateImage","fieldToCheck","RegExp","test","ModalWrapper","Grid","modalFormScrollable","formFieldRow","InputBoxWrapper","e","target","FormSwitchWrapper","modalButtonBar","Button","trim","payload","image","enable_prometheus","registry","image_registry","username","password","api","then","catch","BorderLinearProgress","colorPrimary","bar","padChart","LinearProgress","allValue","currentUsage","centerItem","maxValue","currValue","healthStatus","loading","capacity","unit","parts","niceBytes","percentagelValue","CircularProgress","ErrorBlock","withBreak","Stack","spacing","LabelValuePair","StackItem","styled","Paper","healthStatusToClass","redState","yellowState","greenState","greyState","StorageSummary","usage","raw_usage","raw","getToggle","toggleValue","idPrefix","featureRowStyle","flexFlow","featureItemStyleProps","flex","minWidth","loadingTenant","tenants","tenantDetails","selectedTenant","currentTenant","tenantInfo","logEnabled","monitoringEnabled","encryptionEnabled","minioTLS","consoleTLS","consoleEnabled","adEnabled","oidcEnabled","tenantDetailsStyles","warning","success","centerAlign","detailSection","float","wordWrap","overflowWrap","clear","linkedSection","containerForHeader","match","poolCount","setPoolCount","instances","setInstances","volumes","setVolumes","updateMinioVersion","setUpdateMinioVersion","tenantName","params","tenantNamespace","pools","total_volumes","total_instances","RBIconButton","history","AButton","textOverflow","whiteSpace","wordBreak","href","endpoints","minio","rel","console","write_quorum","drives_online","drives_offline","borderBottom","Box","errorBlock"],"sourceRoot":""}