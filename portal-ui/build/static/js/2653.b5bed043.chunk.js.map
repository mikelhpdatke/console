{"version":3,"file":"static/js/2653.b5bed043.chunk.js","mappings":"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","sources":["screens/Console/Account/AddServiceAccount.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","../node_modules/@mui/material/Switch/switchClasses.js","../node_modules/@mui/material/Switch/Switch.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, Button, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  modalStyleUtils,\n  serviceAccountStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { NewServiceAccount } from \"../Common/CredentialsPrompt/types\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport api from \"../../../common/api\";\nimport CodeMirrorWrapper from \"../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { AccountIcon } from \"../../../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...serviceAccountStyles,\n    ...modalStyleUtils,\n  });\n\ninterface IAddServiceAccountProps {\n  classes: any;\n  open: boolean;\n  closeModalAndRefresh: (res: NewServiceAccount | null) => void;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst AddServiceAccount = ({\n  classes,\n  open,\n  closeModalAndRefresh,\n  setModalErrorSnackMessage,\n}: IAddServiceAccountProps) => {\n  const [addSending, setAddSending] = useState<boolean>(false);\n  const [policyDefinition, setPolicyDefinition] = useState<string>(\"\");\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n  const [isRestrictedByPolicy, setIsRestrictedByPolicy] =\n    useState<boolean>(false);\n  const [addCredentials, setAddCredentials] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (addSending) {\n      if (addCredentials) {\n        api\n          .invoke(\"POST\", `/api/v1/service-account-credentials`, {\n            policy: policyDefinition,\n            accessKey: accessKey,\n            secretKey: secretKey,\n          })\n          .then((res) => {\n            setAddSending(false);\n            closeModalAndRefresh(res);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setAddSending(false);\n            setModalErrorSnackMessage(err);\n          });\n      } else {\n        api\n          .invoke(\"POST\", `/api/v1/service-accounts`, {\n            policy: policyDefinition,\n          })\n          .then((res) => {\n            setAddSending(false);\n            closeModalAndRefresh(res);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setAddSending(false);\n            setModalErrorSnackMessage(err);\n          });\n      }\n    }\n  }, [\n    addSending,\n    setAddSending,\n    setModalErrorSnackMessage,\n    policyDefinition,\n    closeModalAndRefresh,\n    addCredentials,\n    accessKey,\n    secretKey,\n  ]);\n\n  const addServiceAccount = (e: React.FormEvent) => {\n    e.preventDefault();\n    setAddSending(true);\n  };\n\n  const resetForm = () => {\n    setPolicyDefinition(\"\");\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(null);\n      }}\n      title={`Create Service Account`}\n      titleIcon={<AccountIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          addServiceAccount(e);\n        }}\n      >\n        {addSending && (\n          <Grid item xs={12}>\n            <LinearProgress />\n          </Grid>\n        )}\n        <Grid container className={classes.modalFormScrollable}>\n          <Grid item xs={12}>\n            <div className={classes.infoDetails}>\n              Service Accounts inherit the policy explicitly attached to the\n              parent user and the policy attached to each group in which the\n              parent user has membership. You can specify an optional\n              JSON-formatted policy below to restrict the Service Account access\n              to a subset of actions and resources explicitly allowed for the\n              parent user.\n              <Box sx={{ paddingTop: \"15px\", paddingBottom: \"15px\" }}>\n                You cannot modify the Service Account optional policy after\n                saving.\n              </Box>\n            </div>\n          </Grid>\n          <Grid item xs={12}>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"locking\"\n                id=\"locking\"\n                name=\"locking\"\n                checked={addCredentials}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setAddCredentials(event.target.checked);\n                }}\n                label={\"Customize Credentials\"}\n              />\n              {addCredentials && (\n                <Grid item xs={12}>\n                  <div className={classes.stackedInputs}>\n                    <InputBoxWrapper\n                      value={accessKey}\n                      label={\"Access Key\"}\n                      id={\"accessKey\"}\n                      name={\"accessKey\"}\n                      placeholder={\"Enter Access Key\"}\n                      onChange={(e) => {\n                        setAccessKey(e.target.value);\n                      }}\n                    />\n                    <InputBoxWrapper\n                      value={secretKey}\n                      label={\"Secret Key\"}\n                      id={\"secretKey\"}\n                      name={\"secretKey\"}\n                      placeholder={\"Enter Secret Key\"}\n                      onChange={(e) => {\n                        setSecretKey(e.target.value);\n                      }}\n                    />\n                  </div>\n                </Grid>\n              )}\n            </Grid>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"locking\"\n                id=\"locking\"\n                name=\"locking\"\n                checked={isRestrictedByPolicy}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setIsRestrictedByPolicy(event.target.checked);\n                }}\n                label={\"Restrict with policy\"}\n              />\n              {isRestrictedByPolicy && (\n                <Grid item xs={12} className={classes.codeMirrorContainer}>\n                  <CodeMirrorWrapper\n                    label={\"Policy \"}\n                    value={policyDefinition}\n                    onBeforeChange={(editor, data, value) => {\n                      setPolicyDefinition(value);\n                    }}\n                  />\n                </Grid>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid container>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              type=\"button\"\n              color=\"primary\"\n              variant=\"outlined\"\n              onClick={resetForm}\n            >\n              Clear\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={addSending}\n            >\n              Create\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(AddServiceAccount));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid item xs={12} sm={4} md={3}>\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: -8\n}, ownerState.edge === 'end' && {\n  marginRight: -8\n}, ownerState.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    [`&.${switchClasses.checked}`]: {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300],\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.palette.mode === 'light' ? 0.12 : 0.2\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${switchClasses.checked}`]: {\n    color: theme.palette[ownerState.color].main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${switchClasses.disabled}`]: {\n      color: theme.palette.mode === 'light' ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.55)\n    }\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    backgroundColor: theme.palette[ownerState.color].main\n  }\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white,\n  opacity: theme.palette.mode === 'light' ? 0.38 : 0.3\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: theme.shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    edge = false,\n    size = 'medium',\n    sx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;"],"names":["mapDispatchToProps","setModalErrorSnackMessage","connector","connect","withStyles","theme","createStyles","serviceAccountStyles","modalStyleUtils","classes","open","closeModalAndRefresh","useState","addSending","setAddSending","policyDefinition","setPolicyDefinition","accessKey","setAccessKey","secretKey","setSecretKey","isRestrictedByPolicy","setIsRestrictedByPolicy","addCredentials","setAddCredentials","useEffect","api","policy","then","res","catch","err","modalOpen","onClose","title","titleIcon","noValidate","autoComplete","onSubmit","e","preventDefault","addServiceAccount","item","xs","container","className","modalFormScrollable","infoDetails","sx","paddingTop","paddingBottom","value","id","name","checked","onChange","event","target","label","stackedInputs","placeholder","codeMirrorContainer","onBeforeChange","editor","data","modalButtonBar","type","color","variant","onClick","disabled","StyledSwitch","root","width","height","padding","margin","switchBase","transform","palette","common","white","backgroundColor","boxShadow","opacity","border","thumb","marginLeft","track","borderRadius","transition","transitions","create","focusVisible","switchContainer","display","alignItems","justifyContent","Switch","divContainer","marginBottom","indicatorLabelOn","fontWeight","indicatorLabel","fontSize","fieldDescription","marginTop","tooltip","actionsTray","fieldBasic","switchOnly","description","indicatorLabels","switchComponent","clsx","length","inputProps","disableRipple","disableFocusRipple","disableTouchRipple","sm","md","htmlFor","inputLabel","tooltipContainer","placement","textAlign","component","getSwitchUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchRoot","styled","overridesResolver","props","styles","ownerState","edge","capitalize","size","_extends","overflow","boxSizing","position","flexShrink","zIndex","verticalAlign","colorAdjust","marginRight","switchClasses","SwitchSwitchBase","SwitchBase","input","top","left","mode","grey","duration","shortest","alpha","action","active","hoverOpacity","main","lighten","darken","SwitchTrack","black","SwitchThumb","shadows","React","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","slots","composedClasses","composeClasses","useUtilityClasses","icon","_jsx","_jsxs","children","checkedIcon"],"sourceRoot":""}